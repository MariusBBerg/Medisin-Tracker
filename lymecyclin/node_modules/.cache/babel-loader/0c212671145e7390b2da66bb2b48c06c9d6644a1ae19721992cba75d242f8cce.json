{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport moment from \"moment\";\nimport FlashMessage from \"./FlashMessage.vue\";\nexport default {\n  name: \"ProfileDash\",\n  components: {\n    FlashMessage\n  },\n  data() {\n    return {\n      username: \"\",\n      lastMilkTime: \"\",\n      canDrinkMilk: false,\n      canTakePill: false,\n      milkLogs: [],\n      pillLogs: [],\n      editingMilkLog: null,\n      newMilkLogTime: null,\n      editingPillLog: null,\n      // New data property for tracking which log is being edited\n      newPillLogTime: null,\n      // New data property for tracking the new time for the edited log\n      milkFlashMessage: \"\",\n      pillFlashMessage: \"\",\n      flashType: \"info\"\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.isLoggedIn;\n    },\n    lastMilkTimeDisplay() {\n      return this.lastMilkTime ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\") : \"N/A\";\n    }\n  },\n  async created() {\n    if (this.isLoggedIn) {\n      try {\n        let response = await this.$axios.get(\"/\");\n        this.username = response.data.username;\n        this.checkStatus();\n        this.getMilkLogs();\n        this.getPillLogs();\n      } catch (error) {\n        console.error(\"Failed to get user:\", error);\n      }\n    }\n  },\n  methods: {\n    formatDate(date) {\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      };\n      return new Date(date).toLocaleString(undefined, options);\n    },\n    /*\r\n    formatDate(date) {\r\n      return moment(date).format(\"DD.MM.YYYY HH:mm\");\r\n    },\r\n    */\n    async logOut() {\n      if (this.$store.state.isLoggedIn) {\n        try {\n          await this.$axios.post(\"/logout\");\n          this.$store.dispatch(\"logout\");\n          this.$router.push(\"/login\");\n        } catch (error) {\n          console.error(\"Failed to log out:\", error);\n        }\n      } else {\n        console.log(\"User is not logged in\");\n      }\n    },\n    async getMilkLogs() {\n      let response = await this.$axios.get(\"/milk_logs\");\n      this.milkLogs = response.data.milk_logs;\n    },\n    async getPillLogs() {\n      let response = await this.$axios.get(\"/pill_logs\");\n      this.pillLogs = response.data.pill_logs;\n    },\n    async addMilkLog() {\n      this.milkFlashMessage = \"\";\n      this.pillFlashMessage = \"\";\n      if (!this.canDrinkMilk) {\n        this.milkFlashMessage = \"Cannot add milk log since you have taken a pill\";\n        this.flashType = \"error\";\n        return;\n      }\n      await this.$axios.post(\"/milk_logs\");\n      this.getMilkLogs();\n      this.checkStatus();\n      this.milkFlashMessage = \"Milk log added successfully\";\n      this.flashType = \"success\";\n    },\n    async deleteMilkLog(log) {\n      await this.$axios.delete(\"/milk_logs\", {\n        data: {\n          timestamp: log\n        }\n      });\n      this.getMilkLogs();\n      this.checkStatus();\n    },\n    async addPillLog() {\n      this.milkFlashMessage = \"\";\n      this.pillFlashMessage = \"\";\n      if (!this.canTakePill) {\n        this.pillFlashMessage = \"Cannot add pill log less than 5 hours apart\";\n        this.flashType = \"error\";\n        return;\n      }\n      await this.$axios.post(\"/pill_logs\");\n      this.getPillLogs();\n      this.checkStatus();\n      this.pillFlashMessage = \"Pill log added successfully\";\n      this.flashType = \"success\";\n    },\n    async deletePillLog(log) {\n      await this.$axios.delete(\"/pill_logs\", {\n        data: {\n          timestamp: log\n        }\n      });\n      this.getPillLogs();\n    },\n    async checkStatus() {\n      try {\n        let response = await this.$axios.get(\"/can_i\");\n        this.lastMilkTime = this.convertUtcToLocal(response.data.last_milk_time_utc);\n        this.canDrinkMilk = response.data.can_drink_milk;\n        this.canTakePill = response.data.can_take_pill;\n      } catch (error) {\n        console.error(\"Failed to check status:\", error);\n      }\n    },\n    convertUtcToLocal(utcTime) {\n      return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\n    },\n    startEditingMilkLog(log) {\n      this.editingMilkLog = log;\n      this.newMilkLogTime = log;\n    },\n    async saveEditingMilkLog(newTimestamp) {\n      let newTimestampUTC = moment(newTimestamp).utc().format(\"YYYY-MM-DDTHH:mm:ss\");\n      await this.$axios.put(\"/milk_logs\", {\n        old_timestamp: this.editingMilkLog,\n        new_timestamp: newTimestampUTC\n      });\n      this.getMilkLogs();\n      this.checkStatus();\n      this.editingMilkLog = null;\n      this.newMilkLogTime = null;\n    },\n    cancelEditingMilkLog() {\n      this.editingMilkLog = null;\n      this.newMilkLogTime = null;\n    },\n    startEditingPillLog(log) {\n      this.editingPillLog = log;\n      this.newPillLogTime = log; // Set the new time to the current time of the log\n    },\n    async saveEditingPillLog(newTimestamp) {\n      let newTimestampUTC = moment(newTimestamp).utc().format(\"YYYY-MM-DDTHH:mm:ss\");\n      await this.$axios.put(\"/pill_logs\", {\n        old_timestamp: this.editingPillLog,\n        new_timestamp: newTimestampUTC\n      });\n      this.getPillLogs();\n      this.checkStatus();\n      this.editingPillLog = null;\n      this.newPillLogTime = null; // Reset the new time\n    },\n    cancelEditingPillLog() {\n      this.editingPillLog = null;\n      this.newPillLogTime = null; // Reset the new time\n    }\n  }\n};","map":{"version":3,"names":["moment","FlashMessage","name","components","data","username","lastMilkTime","canDrinkMilk","canTakePill","milkLogs","pillLogs","editingMilkLog","newMilkLogTime","editingPillLog","newPillLogTime","milkFlashMessage","pillFlashMessage","flashType","computed","isLoggedIn","$store","state","lastMilkTimeDisplay","local","format","created","response","$axios","get","checkStatus","getMilkLogs","getPillLogs","error","console","methods","formatDate","date","options","year","month","day","hour","minute","Date","toLocaleString","undefined","logOut","post","dispatch","$router","push","log","milk_logs","pill_logs","addMilkLog","deleteMilkLog","delete","timestamp","addPillLog","deletePillLog","convertUtcToLocal","last_milk_time_utc","can_drink_milk","can_take_pill","utcTime","utc","startEditingMilkLog","saveEditingMilkLog","newTimestamp","newTimestampUTC","put","old_timestamp","new_timestamp","cancelEditingMilkLog","startEditingPillLog","saveEditingPillLog","cancelEditingPillLog"],"sources":["C:\\Users\\mariu\\Documents\\Kode\\Prosjekter\\melk\\lymecyclin\\src\\components\\ProfileDash.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <img src=\"../assets/logo.png\" class=\"logo\" @click=\"$router.push('/')\" />\r\n    <div class=\"status\">\r\n      <p>Last milk time: {{ lastMilkTime }}</p>\r\n      <p>Can drink milk: {{ canDrinkMilk }}</p>\r\n      <p>Can take pill: {{ canTakePill }}</p>\r\n    </div>\r\n\r\n    <div class=\"logs\">\r\n      <h2>Milk Logs</h2>\r\n      <div v-for=\"log in milkLogs\" :key=\"log\">\r\n        <template v-if=\"editingMilkLog === log\">\r\n          <input type=\"datetime-local\" v-model=\"newMilkLogTime\" />\r\n          <button @click=\"saveEditingMilkLog(newMilkLogTime)\">Save</button>\r\n          <button @click=\"cancelEditingMilkLog\">Cancel</button>\r\n        </template>\r\n        <template v-else>\r\n          {{ formatDate(log) }}\r\n          <button @click=\"deleteMilkLog(log)\">Delete</button>\r\n          <button @click=\"startEditingMilkLog(log)\">Edit</button>\r\n        </template>\r\n      </div>\r\n      <FlashMessage :message=\"milkFlashMessage\" :type=\"flashType\" />\r\n      <button @click=\"addMilkLog\">Add Milk Log</button>\r\n\r\n      <h2>Pill Logs</h2>\r\n      <div v-for=\"log in pillLogs\" :key=\"log\">\r\n        <template v-if=\"editingPillLog === log\">\r\n          <input type=\"datetime-local\" v-model=\"newPillLogTime\" />\r\n          <button @click=\"saveEditingPillLog(newPillLogTime)\">Save</button>\r\n          <button @click=\"cancelEditingPillLog\">Cancel</button>\r\n        </template>\r\n        <template v-else>\r\n          {{ formatDate(log) }}\r\n          <button @click=\"deletePillLog(log)\">Delete</button>\r\n          <button @click=\"startEditingPillLog(log)\">Edit</button>\r\n        </template>\r\n      </div>\r\n      <FlashMessage :message=\"pillFlashMessage\" :type=\"flashType\" />\r\n      <button @click=\"addPillLog\">Add Pill Log</button>\r\n    </div>\r\n\r\n    <button class=\"logout-button\" @click=\"logOut\">Log Out</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nimport FlashMessage from \"./FlashMessage.vue\";\r\n\r\nexport default {\r\n  name: \"ProfileDash\",\r\n  components: {\r\n    FlashMessage,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      lastMilkTime: \"\",\r\n      canDrinkMilk: false,\r\n      canTakePill: false,\r\n      milkLogs: [],\r\n      pillLogs: [],\r\n      editingMilkLog: null,\r\n      newMilkLogTime: null,\r\n      editingPillLog: null, // New data property for tracking which log is being edited\r\n      newPillLogTime: null, // New data property for tracking the new time for the edited log\r\n      milkFlashMessage: \"\",\r\n      pillFlashMessage: \"\",\r\n      flashType: \"info\",\r\n    };\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return this.$store.state.isLoggedIn;\r\n    },\r\n    lastMilkTimeDisplay() {\r\n      return this.lastMilkTime\r\n        ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : \"N/A\";\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    if (this.isLoggedIn) {\r\n      try {\r\n        let response = await this.$axios.get(\"/\");\r\n        this.username = response.data.username;\r\n        this.checkStatus();\r\n        this.getMilkLogs();\r\n        this.getPillLogs();\r\n      } catch (error) {\r\n        console.error(\"Failed to get user:\", error);\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    formatDate(date) {\r\n      const options = {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      };\r\n      return new Date(date).toLocaleString(undefined, options);\r\n    },\r\n    /*\r\n    formatDate(date) {\r\n      return moment(date).format(\"DD.MM.YYYY HH:mm\");\r\n    },\r\n*/\r\n    async logOut() {\r\n      if (this.$store.state.isLoggedIn) {\r\n        try {\r\n          await this.$axios.post(\"/logout\");\r\n          this.$store.dispatch(\"logout\");\r\n          this.$router.push(\"/login\");\r\n        } catch (error) {\r\n          console.error(\"Failed to log out:\", error);\r\n        }\r\n      } else {\r\n        console.log(\"User is not logged in\");\r\n      }\r\n    },\r\n    async getMilkLogs() {\r\n      let response = await this.$axios.get(\"/milk_logs\");\r\n      this.milkLogs = response.data.milk_logs;\r\n    },\r\n\r\n    async getPillLogs() {\r\n      let response = await this.$axios.get(\"/pill_logs\");\r\n      this.pillLogs = response.data.pill_logs;\r\n    },\r\n\r\n    async addMilkLog() {\r\n      this.milkFlashMessage = \"\";\r\n      this.pillFlashMessage = \"\";\r\n      if (!this.canDrinkMilk) {\r\n        this.milkFlashMessage =\r\n          \"Cannot add milk log since you have taken a pill\";\r\n        this.flashType = \"error\";\r\n        return;\r\n      }\r\n      await this.$axios.post(\"/milk_logs\");\r\n      this.getMilkLogs();\r\n      this.checkStatus();\r\n      this.milkFlashMessage = \"Milk log added successfully\";\r\n      this.flashType = \"success\";\r\n    },\r\n\r\n    async deleteMilkLog(log) {\r\n      await this.$axios.delete(\"/milk_logs\", { data: { timestamp: log } });\r\n      this.getMilkLogs();\r\n      this.checkStatus();\r\n    },\r\n\r\n    async addPillLog() {\r\n      this.milkFlashMessage = \"\";\r\n      this.pillFlashMessage = \"\";\r\n      if (!this.canTakePill) {\r\n        this.pillFlashMessage = \"Cannot add pill log less than 5 hours apart\";\r\n        this.flashType = \"error\";\r\n        return;\r\n      }\r\n      await this.$axios.post(\"/pill_logs\");\r\n      this.getPillLogs();\r\n      this.checkStatus();\r\n      this.pillFlashMessage = \"Pill log added successfully\";\r\n      this.flashType = \"success\";\r\n    },\r\n\r\n    async deletePillLog(log) {\r\n      await this.$axios.delete(\"/pill_logs\", { data: { timestamp: log } });\r\n      this.getPillLogs();\r\n    },\r\n\r\n    async checkStatus() {\r\n      try {\r\n        let response = await this.$axios.get(\"/can_i\");\r\n        this.lastMilkTime = this.convertUtcToLocal(\r\n          response.data.last_milk_time_utc\r\n        );\r\n        this.canDrinkMilk = response.data.can_drink_milk;\r\n        this.canTakePill = response.data.can_take_pill;\r\n      } catch (error) {\r\n        console.error(\"Failed to check status:\", error);\r\n      }\r\n    },\r\n    convertUtcToLocal(utcTime) {\r\n      return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\r\n    },\r\n\r\n    startEditingMilkLog(log) {\r\n      this.editingMilkLog = log;\r\n      this.newMilkLogTime = log;\r\n    },\r\n    async saveEditingMilkLog(newTimestamp) {\r\n      let newTimestampUTC = moment(newTimestamp)\r\n        .utc()\r\n        .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n      await this.$axios.put(\"/milk_logs\", {\r\n        old_timestamp: this.editingMilkLog,\r\n        new_timestamp: newTimestampUTC,\r\n      });\r\n      this.getMilkLogs();\r\n      this.checkStatus();\r\n      this.editingMilkLog = null;\r\n      this.newMilkLogTime = null;\r\n    },\r\n    cancelEditingMilkLog() {\r\n      this.editingMilkLog = null;\r\n      this.newMilkLogTime = null;\r\n    },\r\n    startEditingPillLog(log) {\r\n      this.editingPillLog = log;\r\n      this.newPillLogTime = log; // Set the new time to the current time of the log\r\n    },\r\n    async saveEditingPillLog(newTimestamp) {\r\n      let newTimestampUTC = moment(newTimestamp)\r\n        .utc()\r\n        .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n      await this.$axios.put(\"/pill_logs\", {\r\n        old_timestamp: this.editingPillLog,\r\n        new_timestamp: newTimestampUTC,\r\n      });\r\n      this.getPillLogs();\r\n      this.checkStatus();\r\n      this.editingPillLog = null;\r\n      this.newPillLogTime = null; // Reset the new time\r\n    },\r\n    cancelEditingPillLog() {\r\n      this.editingPillLog = null;\r\n      this.newPillLogTime = null; // Reset the new time\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.logo {\r\n  width: 150px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.home {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.home p {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ea5736;\r\n  margin-bottom: 10px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.action-button,\r\n.logout-button {\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #ea5736;\r\n  border: none;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  line-height: 40px;\r\n}\r\n\r\n.logout-button {\r\n  background-color: #fff;\r\n  border: 1px solid #ea5736;\r\n  color: #ea5736;\r\n  margin-top: 10px;\r\n}\r\n\r\n.logs {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.logs h2 {\r\n  text-align: center;\r\n  color: #ea5736;\r\n}\r\n\r\n.logs div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border: 1px solid #ea5736;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.logs button {\r\n  background-color: #ea5736;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
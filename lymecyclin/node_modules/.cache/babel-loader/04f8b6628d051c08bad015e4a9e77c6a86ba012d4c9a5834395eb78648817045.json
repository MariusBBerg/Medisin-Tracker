{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PillsCalendar from \"./PillsCalendar.vue\";\nimport CircularCountDownTimer from 'vue-circular-count-down-timer';\nimport moment from \"moment\";\nexport default {\n  name: \"HomeView\",\n  components: {\n    PillsCalendar,\n    CircularCountDownTimer\n  },\n  data() {\n    return {\n      username: \"\",\n      lastMilkTime: \"\",\n      lastPillTime: \"\",\n      canDrinkMilk: false,\n      canTakePill: false,\n      pillCountdown: \"\",\n      milkCountdown: \"\",\n      milkCountdownCircles: [{\n        id: 'hours',\n        startValue: 24,\n        value: 0,\n        steps: 24,\n        stepLength: 1,\n        label: 'Hours'\n      }, {\n        id: 'minutes',\n        startValue: 60,\n        value: 0,\n        steps: 60,\n        stepLength: 1,\n        label: 'Minutes'\n      }, {\n        id: 'seconds',\n        startValue: 60,\n        value: 0,\n        steps: 60,\n        stepLength: 1,\n        label: 'Seconds'\n      }],\n      pillCountdownCircles: [{\n        id: 'hours',\n        startValue: 24,\n        value: 0,\n        steps: 24,\n        stepLength: 1,\n        label: 'Hours'\n      }, {\n        id: 'minutes',\n        startValue: 60,\n        value: 0,\n        steps: 60,\n        stepLength: 1,\n        label: 'Minutes'\n      }, {\n        id: 'seconds',\n        startValue: 60,\n        value: 0,\n        steps: 60,\n        stepLength: 1,\n        label: 'Seconds'\n      }]\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.isLoggedIn;\n    },\n    lastMilkTimeDisplay() {\n      return this.lastMilkTime ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\") : \"N/A\";\n    },\n    lastPillTimeDisplay() {\n      return this.lastPillTime ? moment(this.lastPillTime).local().format(\"YYYY-MM-DD HH:mm:ss\") : \"N/A\";\n    }\n  },\n  async created() {\n    if (this.isLoggedIn) {\n      try {\n        let response = await this.$axios.get(\"/\");\n        this.username = response.data.username;\n        this.checkStatus();\n        this.startCountdowns();\n      } catch (error) {\n        console.error(\"Failed to get user:\", error);\n      }\n    }\n  },\n  methods: {\n    async logOut() {\n      console.log(this.$store.state.isLoggedIn);\n\n      // Check if the user is logged in\n      if (this.$store.state.isLoggedIn) {\n        try {\n          // Log out the user on the server\n          await this.$axios.post(\"/logout\");\n\n          // Log out the user on the client\n          this.$store.dispatch(\"logout\");\n          this.$router.push(\"/login\");\n        } catch (error) {\n          console.error(\"Failed to log out:\", error);\n        }\n      } else {\n        console.log(\"User is not logged in\");\n      }\n    },\n    async drinkMilk() {\n      if (!this.canDrinkMilk) {\n        alert(\"Cannot drink milk since you have taken a pill\");\n        return;\n      } else {\n        try {\n          let response = await this.$axios.post(\"/drink_milk\");\n          alert(response.data.message);\n          this.checkStatus();\n        } catch (error) {\n          alert(error.response.data.message);\n        }\n      }\n    },\n    async takePill() {\n      if (!this.canTakePill) {\n        alert(\"Cannot take pill less than 5 hours apart\");\n        return;\n      }\n      try {\n        await this.$axios.post(\"/take_pill\");\n        this.checkStatus();\n      } catch (error) {\n        console.error(\"Failed to log pill:\", error);\n      }\n    },\n    async checkStatus() {\n      try {\n        let response = await this.$axios.get(\"/can_i\");\n        // Antar at backend returnerer UTC tidspunkt som ISO string\n        this.lastMilkTime = this.convertUtcToLocal(response.data.last_milk_time_utc);\n        this.lastPillTime = this.convertUtcToLocal(response.data.last_pill_time_utc);\n        this.canDrinkMilk = response.data.can_drink_milk;\n        this.canTakePill = response.data.can_take_pill;\n\n        // Oppdater nedtelling basert på nye tider fra server\n        this.updateCountdowns();\n      } catch (error) {\n        console.error(\"Failed to check status:\", error);\n      }\n    },\n    convertUtcToLocal(utcTime) {\n      return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\n    },\n    // Eksempel på konvertering fra lokal tid til UTC før sending til backend\n    convertLocalToUtc(localTime) {\n      return moment(localTime).utc().format();\n    },\n    startCountdowns() {\n      setInterval(() => {\n        const now = moment(); // Get current time\n        const updateCountdown = time => {\n          const duration = moment.duration(moment(time).diff(now));\n          if (duration.asMilliseconds() <= 0) {\n            return {\n              hours: 0,\n              minutes: 0,\n              seconds: 0\n            };\n          }\n          return {\n            hours: duration.hours(),\n            minutes: duration.minutes(),\n            seconds: duration.seconds()\n          };\n        };\n        const milkCountdown = this.lastPillTime ? updateCountdown(moment(this.lastPillTime).add(1, \"hours\")) : {\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        };\n        this.milkCountdownCircles[0].value = milkCountdown.hours;\n        this.milkCountdownCircles[1].value = milkCountdown.minutes;\n        this.milkCountdownCircles[2].value = milkCountdown.seconds;\n        const pillCountdown = this.lastPillTime && this.lastMilkTime ? updateCountdown(moment.max(moment(this.lastPillTime).add(5, \"hours\"), moment(this.lastMilkTime).add(1, \"hours\"))) : {\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        };\n        this.pillCountdownCircles[0].value = pillCountdown.hours;\n        this.pillCountdownCircles[1].value = pillCountdown.minutes;\n        this.pillCountdownCircles[2].value = pillCountdown.seconds;\n      }, 1000);\n    }\n  }\n};","map":{"version":3,"names":["PillsCalendar","CircularCountDownTimer","moment","name","components","data","username","lastMilkTime","lastPillTime","canDrinkMilk","canTakePill","pillCountdown","milkCountdown","milkCountdownCircles","id","startValue","value","steps","stepLength","label","pillCountdownCircles","computed","isLoggedIn","$store","state","lastMilkTimeDisplay","local","format","lastPillTimeDisplay","created","response","$axios","get","checkStatus","startCountdowns","error","console","methods","logOut","log","post","dispatch","$router","push","drinkMilk","alert","message","takePill","convertUtcToLocal","last_milk_time_utc","last_pill_time_utc","can_drink_milk","can_take_pill","updateCountdowns","utcTime","utc","convertLocalToUtc","localTime","setInterval","now","updateCountdown","time","duration","diff","asMilliseconds","hours","minutes","seconds","add","max"],"sources":["C:\\Users\\mariu\\Documents\\Kode\\Prosjekter\\melk\\lymecyclin\\src\\components\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <img src=\"../assets/logo.png\" class=\"logo\" />\r\n    <h1 v-if=\"isLoggedIn\">Hello {{ username }}</h1>\r\n    <div v-if=\"!isLoggedIn\">\r\n      <router-link to=\"/sign-up\">\r\n        <button class=\"action-button\">Sign Up</button>\r\n      </router-link>\r\n      <router-link to=\"/login\">\r\n        <button class=\"action-button\">Log In</button>\r\n      </router-link>\r\n    </div>\r\n    <div v-if=\"isLoggedIn\">\r\n      <div class=\"actions\">\r\n        <button class=\"action-button\" @click=\"drinkMilk\">Drink Milk</button>\r\n        <button class=\"action-button\" @click=\"takePill\">Take Pill</button>\r\n      </div>\r\n      <div class=\"status\">\r\n        <p>Last milk time: {{ lastMilkTime }}</p>\r\n        <p>Last pill time: {{ lastPillTime }}</p>\r\n        <p>Can drink milk: {{ canDrinkMilk }}</p>\r\n        <p>Can take pill: {{ canTakePill }}</p>\r\n        <p>Time until next milk: {{ milkCountdown }}</p>\r\n        <p>Time until next pill: {{ pillCountdown }}</p>\r\n      </div>\r\n      <div class=\"status\">\r\n        <!-- Resten av koden din... -->\r\n        <p>Time until next milk:</p>\r\n        <circular-count-down-timer :circles=\"milkCountdownCircles\" />\r\n        <p>Time until next pill:</p>\r\n        <circular-count-down-timer :circles=\"pillCountdownCircles\" />\r\n      </div>\r\n\r\n      <PillsCalendar />\r\n\r\n      <button class=\"logout-button\" @click=\"logOut\">Log Out</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PillsCalendar from \"./PillsCalendar.vue\";\r\nimport CircularCountDownTimer from 'vue-circular-count-down-timer';\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n\r\n  components: {\r\n    PillsCalendar,\r\n    CircularCountDownTimer,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      lastMilkTime: \"\",\r\n      lastPillTime: \"\",\r\n      canDrinkMilk: false,\r\n      canTakePill: false,\r\n      pillCountdown: \"\",\r\n      milkCountdown: \"\",\r\n      milkCountdownCircles: [\r\n        {\r\n          id: 'hours',\r\n          startValue: 24,\r\n          value: 0,\r\n          steps: 24,\r\n          stepLength: 1,\r\n          label: 'Hours'\r\n        },\r\n        {\r\n          id: 'minutes',\r\n          startValue: 60,\r\n          value: 0,\r\n          steps: 60,\r\n          stepLength: 1,\r\n          label: 'Minutes'\r\n        },\r\n        {\r\n          id: 'seconds',\r\n          startValue: 60,\r\n          value: 0,\r\n          steps: 60,\r\n          stepLength: 1,\r\n          label: 'Seconds'\r\n        }\r\n      ],\r\n      pillCountdownCircles: [\r\n        {\r\n          id: 'hours',\r\n          startValue: 24,\r\n          value: 0,\r\n          steps: 24,\r\n          stepLength: 1,\r\n          label: 'Hours'\r\n        },\r\n        {\r\n          id: 'minutes',\r\n          startValue: 60,\r\n          value: 0,\r\n          steps: 60,\r\n          stepLength: 1,\r\n          label: 'Minutes'\r\n        },\r\n        {\r\n          id: 'seconds',\r\n          startValue: 60,\r\n          value: 0,\r\n          steps: 60,\r\n          stepLength: 1,\r\n          label: 'Seconds'\r\n        }\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return this.$store.state.isLoggedIn;\r\n    },\r\n    lastMilkTimeDisplay() {\r\n      return this.lastMilkTime\r\n        ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : \"N/A\";\r\n    },\r\n    lastPillTimeDisplay() {\r\n      return this.lastPillTime\r\n        ? moment(this.lastPillTime).local().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : \"N/A\";\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    if (this.isLoggedIn) {\r\n      try {\r\n        let response = await this.$axios.get(\"/\");\r\n        this.username = response.data.username;\r\n        this.checkStatus();\r\n        this.startCountdowns();\r\n      } catch (error) {\r\n        console.error(\"Failed to get user:\", error);\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async logOut() {\r\n      console.log(this.$store.state.isLoggedIn);\r\n\r\n      // Check if the user is logged in\r\n      if (this.$store.state.isLoggedIn) {\r\n        try {\r\n          // Log out the user on the server\r\n          await this.$axios.post(\"/logout\");\r\n\r\n          // Log out the user on the client\r\n          this.$store.dispatch(\"logout\");\r\n          this.$router.push(\"/login\");\r\n        } catch (error) {\r\n          console.error(\"Failed to log out:\", error);\r\n        }\r\n      } else {\r\n        console.log(\"User is not logged in\");\r\n      }\r\n    },\r\n\r\n    async drinkMilk() {\r\n      if (!this.canDrinkMilk) {\r\n        alert(\"Cannot drink milk since you have taken a pill\");\r\n        return;\r\n      } else {\r\n        try {\r\n          let response = await this.$axios.post(\"/drink_milk\");\r\n          alert(response.data.message);\r\n          this.checkStatus();\r\n        } catch (error) {\r\n          alert(error.response.data.message);\r\n        }\r\n      }\r\n    },\r\n\r\n    async takePill() {\r\n      if (!this.canTakePill) {\r\n        alert(\"Cannot take pill less than 5 hours apart\");\r\n        return;\r\n      }\r\n      try {\r\n        await this.$axios.post(\"/take_pill\");\r\n        this.checkStatus();\r\n      } catch (error) {\r\n        console.error(\"Failed to log pill:\", error);\r\n      }\r\n    },\r\n\r\n    async checkStatus() {\r\n      try {\r\n        let response = await this.$axios.get(\"/can_i\");\r\n        // Antar at backend returnerer UTC tidspunkt som ISO string\r\n        this.lastMilkTime = this.convertUtcToLocal(response.data.last_milk_time_utc);\r\n        this.lastPillTime = this.convertUtcToLocal(response.data.last_pill_time_utc);\r\n        this.canDrinkMilk = response.data.can_drink_milk;\r\n        this.canTakePill = response.data.can_take_pill;\r\n\r\n        // Oppdater nedtelling basert på nye tider fra server\r\n        this.updateCountdowns();\r\n      } catch (error) {\r\n        console.error(\"Failed to check status:\", error);\r\n      }\r\n    },\r\n    convertUtcToLocal(utcTime) {\r\n      return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\r\n    },\r\n\r\n    // Eksempel på konvertering fra lokal tid til UTC før sending til backend\r\n    convertLocalToUtc(localTime) {\r\n      return moment(localTime).utc().format();\r\n    },\r\n\r\n    startCountdowns() {\r\n      setInterval(() => {\r\n        const now = moment(); // Get current time\r\n        const updateCountdown = (time) => {\r\n          const duration = moment.duration(\r\n            moment(time).diff(now)\r\n          );\r\n          if (duration.asMilliseconds() <= 0) {\r\n            return { hours: 0, minutes: 0, seconds: 0 };\r\n          }\r\n          return { hours: duration.hours(), minutes: duration.minutes(), seconds: duration.seconds() };\r\n        };\r\n        \r\n        const milkCountdown = this.lastPillTime\r\n          ? updateCountdown(moment(this.lastPillTime).add(1, \"hours\"))\r\n          : { hours: 0, minutes: 0, seconds: 0 };\r\n        this.milkCountdownCircles[0].value = milkCountdown.hours;\r\n        this.milkCountdownCircles[1].value = milkCountdown.minutes;\r\n        this.milkCountdownCircles[2].value = milkCountdown.seconds;\r\n\r\n        const pillCountdown = this.lastPillTime && this.lastMilkTime\r\n          ? updateCountdown(moment.max(moment(this.lastPillTime).add(5, \"hours\"), moment(this.lastMilkTime).add(1, \"hours\")))\r\n          : { hours: 0, minutes: 0, seconds: 0 };\r\n        this.pillCountdownCircles[0].value = pillCountdown.hours;\r\n        this.pillCountdownCircles[1].value = pillCountdown.minutes;\r\n        this.pillCountdownCircles[2].value = pillCountdown.seconds;\r\n      }, 1000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.logo {\r\n  width: 100px;\r\n}\r\n.home {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\r\n\r\n.home p {\r\n  width: 300px;\r\n  padding: 10px;\r\n  border: 1px solid #ea5736;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.action-button {\r\n  width: 300px;\r\n  height: 40px;\r\n  background-color: #ea5736;\r\n  border: 1px #ea5736;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.logout-button {\r\n  width: 300px;\r\n  height: 40px;\r\n  background-color: #fff;\r\n  border: 1px #ea5736;\r\n  color: #ea5736;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.status {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.status p {\r\n  width: 300px;\r\n  padding: 10px;\r\n  border: 1px solid #ea5736;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
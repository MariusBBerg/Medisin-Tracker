{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PillsCalendar from \"./PillsCalendar.vue\";\nimport moment from \"moment\";\nexport default {\n  name: \"HomeView\",\n  components: {\n    PillsCalendar\n  },\n  data() {\n    return {\n      username: \"\",\n      lastMilkTime: \"\",\n      lastPillTime: \"\",\n      canDrinkMilk: false,\n      canTakePill: false,\n      pillCountdown: \"\",\n      milkCountdown: \"\",\n      pillTakenCount: 0 // Forcing re-render of PillsCalendar\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.isLoggedIn;\n    },\n    lastMilkTimeDisplay() {\n      return this.lastMilkTime ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\") : \"N/A\";\n    },\n    lastPillTimeDisplay() {\n      return this.lastPillTime ? moment(this.lastPillTime).local().format(\"YYYY-MM-DD HH:mm:ss\") : \"N/A\";\n    }\n  },\n  async created() {\n    if (this.isLoggedIn) {\n      try {\n        let response = await this.$axios.get(\"/\");\n        this.username = response.data.username;\n        this.checkStatus();\n        this.startCountdowns();\n      } catch (error) {\n        console.error(\"Failed to get user:\", error);\n      }\n    }\n  },\n  methods: {\n    async logOut() {\n      console.log(this.$store.state.isLoggedIn);\n\n      // Check if the user is logged in\n      if (this.$store.state.isLoggedIn) {\n        try {\n          // Log out the user on the server\n          await this.$axios.post(\"/logout\");\n\n          // Log out the user on the client\n          this.$store.dispatch(\"logout\");\n          this.$router.push(\"/login\");\n        } catch (error) {\n          console.error(\"Failed to log out:\", error);\n        }\n      } else {\n        console.log(\"User is not logged in\");\n      }\n    },\n    async drinkMilk() {\n      if (!this.canDrinkMilk) {\n        alert(\"Cannot drink milk since you have taken a pill\");\n        return;\n      } else {\n        try {\n          let response = await this.$axios.post(\"/drink_milk\");\n          alert(response.data.message);\n          this.checkStatus();\n        } catch (error) {\n          alert(error.response.data.message);\n        }\n      }\n    },\n    async takePill() {\n      if (!this.canTakePill) {\n        alert(\"Cannot take pill less than 5 hours apart\");\n        return;\n      }\n      try {\n        await this.$axios.post(\"/take_pill\");\n        this.checkStatus();\n        this.pillTakenCount++;\n      } catch (error) {\n        console.error(\"Failed to log pill:\", error);\n      }\n    },\n    async checkStatus() {\n      try {\n        let response = await this.$axios.get(\"/can_i\");\n        // Antar at backend returnerer UTC tidspunkt som ISO string\n        this.lastMilkTime = this.convertUtcToLocal(response.data.last_milk_time_utc);\n        this.lastPillTime = this.convertUtcToLocal(response.data.last_pill_time_utc);\n        this.canDrinkMilk = response.data.can_drink_milk;\n        this.canTakePill = response.data.can_take_pill;\n\n        // Oppdater nedtelling basert på nye tider fra server\n        this.startCountdowns();\n      } catch (error) {\n        console.error(\"Failed to check status:\", error);\n      }\n    },\n    convertUtcToLocal(utcTime) {\n      return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\n    },\n    // Eksempel på konvertering fra lokal tid til UTC før sending til backend\n    convertLocalToUtc(localTime) {\n      return moment(localTime).utc().format();\n    },\n    startCountdowns() {\n      setInterval(() => {\n        const now = moment().unix(); // Get current time in UNIX timestamp\n        const updateCountdown = time => {\n          if (!time || !moment(time).isValid()) {\n            return \"Now\";\n          }\n          const duration = moment.duration(moment(time).unix() - now, \"seconds\");\n          if (duration.asSeconds() <= 0) {\n            return \"Now\";\n          }\n          return `${duration.hours()} hours, ${duration.minutes()} minutes, ${duration.seconds()} seconds`;\n        };\n        this.milkCountdown = this.lastPillTime ? updateCountdown(moment(this.lastPillTime).add(1, \"hours\")) : \"Now\";\n        this.pillCountdown = this.lastPillTime && this.lastMilkTime ? updateCountdown(moment.max(moment(this.lastPillTime).add(5, \"hours\"), moment(this.lastMilkTime).add(1, \"hours\"))) : this.lastPillTime ? updateCountdown(moment(this.lastPillTime).add(5, \"hours\")) : \"Now\";\n      }, 1000);\n    }\n  }\n};","map":{"version":3,"names":["PillsCalendar","moment","name","components","data","username","lastMilkTime","lastPillTime","canDrinkMilk","canTakePill","pillCountdown","milkCountdown","pillTakenCount","computed","isLoggedIn","$store","state","lastMilkTimeDisplay","local","format","lastPillTimeDisplay","created","response","$axios","get","checkStatus","startCountdowns","error","console","methods","logOut","log","post","dispatch","$router","push","drinkMilk","alert","message","takePill","convertUtcToLocal","last_milk_time_utc","last_pill_time_utc","can_drink_milk","can_take_pill","utcTime","utc","convertLocalToUtc","localTime","setInterval","now","unix","updateCountdown","time","isValid","duration","asSeconds","hours","minutes","seconds","add","max"],"sources":["C:\\Users\\mariu\\Documents\\Kode\\Prosjekter\\melk\\lymecyclin\\src\\components\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"logo\" @click=\"$router.push('/')\" />\r\n    <div v-if=\"!isLoggedIn\">\r\n      <h2>Marius' melke- og medisintracker</h2>\r\n      <p>Holde styr på når melk og medisinen lymecyclin tas.</p>\r\n      <router-link to=\"/sign-up\">\r\n        <button class=\"action-button\">Sign Up</button>\r\n      </router-link>\r\n      <router-link to=\"/login\">\r\n        <button class=\"action-button\">Log In</button>\r\n      </router-link>\r\n    </div>\r\n    <div v-if=\"isLoggedIn\">\r\n      <h1>Hello {{ username }}</h1>\r\n      <div class=\"actions\">\r\n        <button class=\"action-button\" @click=\"drinkMilk\">Drink Milk</button>\r\n        <button class=\"action-button\" @click=\"takePill\">Take Pill</button>\r\n      </div>\r\n      <div class=\"status\">\r\n        <p>When can I drink milk: {{ milkCountdown }}</p>\r\n        <p>When can I take next pill: {{ pillCountdown }}</p>\r\n      </div>\r\n      <PillsCalendar :key=\"pillTakenCount\"/>\r\n      <button class=\"logout-button\" @click=\"$router.push('/profileDash')\">Profile</button>\r\n      <button class=\"logout-button\" @click=\"logOut\">Log Out</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport PillsCalendar from \"./PillsCalendar.vue\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n\r\n  components: {\r\n    PillsCalendar,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      lastMilkTime: \"\",\r\n      lastPillTime: \"\",\r\n      canDrinkMilk: false,\r\n      canTakePill: false,\r\n      pillCountdown: \"\",\r\n      milkCountdown: \"\",\r\n      pillTakenCount: 0, // Forcing re-render of PillsCalendar\r\n\r\n    };\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return this.$store.state.isLoggedIn;\r\n    },\r\n    lastMilkTimeDisplay() {\r\n      return this.lastMilkTime\r\n        ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : \"N/A\";\r\n    },\r\n    lastPillTimeDisplay() {\r\n      return this.lastPillTime\r\n        ? moment(this.lastPillTime).local().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : \"N/A\";\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    if (this.isLoggedIn) {\r\n      try {\r\n        let response = await this.$axios.get(\"/\");\r\n        this.username = response.data.username;\r\n        this.checkStatus();\r\n        this.startCountdowns();\r\n      } catch (error) {\r\n        console.error(\"Failed to get user:\", error);\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async logOut() {\r\n      console.log(this.$store.state.isLoggedIn);\r\n\r\n      // Check if the user is logged in\r\n      if (this.$store.state.isLoggedIn) {\r\n        try {\r\n          // Log out the user on the server\r\n          await this.$axios.post(\"/logout\");\r\n\r\n          // Log out the user on the client\r\n          this.$store.dispatch(\"logout\");\r\n          this.$router.push(\"/login\");\r\n        } catch (error) {\r\n          console.error(\"Failed to log out:\", error);\r\n        }\r\n      } else {\r\n        console.log(\"User is not logged in\");\r\n      }\r\n    },\r\n\r\n    async drinkMilk() {\r\n      if (!this.canDrinkMilk) {\r\n        alert(\"Cannot drink milk since you have taken a pill\");\r\n        return;\r\n      } else {\r\n        try {\r\n          let response = await this.$axios.post(\"/drink_milk\");\r\n          alert(response.data.message);\r\n          this.checkStatus();\r\n        } catch (error) {\r\n          alert(error.response.data.message);\r\n        }\r\n      }\r\n    },\r\n\r\n    async takePill() {\r\n      if (!this.canTakePill) {\r\n        alert(\"Cannot take pill less than 5 hours apart\");\r\n        return;\r\n      }\r\n      try {\r\n        await this.$axios.post(\"/take_pill\");\r\n        this.checkStatus();\r\n        this.pillTakenCount++;\r\n      } catch (error) {\r\n        console.error(\"Failed to log pill:\", error);\r\n      }\r\n    },\r\n\r\n    async checkStatus() {\r\n      try {\r\n        let response = await this.$axios.get(\"/can_i\");\r\n        // Antar at backend returnerer UTC tidspunkt som ISO string\r\n        this.lastMilkTime = this.convertUtcToLocal(\r\n          response.data.last_milk_time_utc\r\n        );\r\n        this.lastPillTime = this.convertUtcToLocal(\r\n          response.data.last_pill_time_utc\r\n        );\r\n        this.canDrinkMilk = response.data.can_drink_milk;\r\n        this.canTakePill = response.data.can_take_pill;\r\n\r\n        // Oppdater nedtelling basert på nye tider fra server\r\n        this.startCountdowns();\r\n      } catch (error) {\r\n        console.error(\"Failed to check status:\", error);\r\n      }\r\n    },\r\n    convertUtcToLocal(utcTime) {\r\n      return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\r\n    },\r\n\r\n    // Eksempel på konvertering fra lokal tid til UTC før sending til backend\r\n    convertLocalToUtc(localTime) {\r\n      return moment(localTime).utc().format();\r\n    },\r\n\r\n    startCountdowns() {\r\n      setInterval(() => {\r\n        const now = moment().unix(); // Get current time in UNIX timestamp\r\n        const updateCountdown = (time) => {\r\n          if (!time || !moment(time).isValid()) {\r\n            return \"Now\";\r\n          }\r\n          const duration = moment.duration(\r\n            moment(time).unix() - now,\r\n            \"seconds\"\r\n          );\r\n          if (duration.asSeconds() <= 0) {\r\n            return \"Now\";\r\n          }\r\n          return `${duration.hours()} hours, ${duration.minutes()} minutes, ${duration.seconds()} seconds`;\r\n        };\r\n\r\n        this.milkCountdown = this.lastPillTime\r\n          ? updateCountdown(moment(this.lastPillTime).add(1, \"hours\"))\r\n          : \"Now\";\r\n        this.pillCountdown =\r\n          this.lastPillTime && this.lastMilkTime\r\n            ? updateCountdown(\r\n                moment.max(\r\n                  moment(this.lastPillTime).add(5, \"hours\"),\r\n                  moment(this.lastMilkTime).add(1, \"hours\")\r\n                )\r\n              )\r\n            : this.lastPillTime\r\n            ? updateCountdown(moment(this.lastPillTime).add(5, \"hours\"))\r\n            : \"Now\";\r\n      }, 1000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n:root {\r\n  --primary-color: #4a90e2; /* Lys blå for primære handlinger */\r\n  --secondary-color: #ea5736; /* Original farge bevart for kontrast */\r\n  --text-color: #333; /* Mørkere tekst for bedre lesbarhet */\r\n  --background-color: #f5f5f5; /* Lys bakgrunnsfarge */\r\n  --font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n}\r\n.home h2, .home p {\r\n  margin: 10px 0; /* Gir litt plass rundt teksten */\r\n}\r\n\r\n/* Tilpassede stiler for nytt innhold */\r\n.home h2 {\r\n  color: var(--primary-color);\r\n  margin-bottom: 15px; /* Gir litt plass under overskriften */\r\n}\r\n\r\n.home p {\r\n  color: var(--text-color);\r\n  margin-bottom: 20px; /* Ekstra plass før knappene */\r\n  text-align: center;\r\n  max-width: 400px; /* Begrenser bredden for bedre lesbarhet */\r\n  line-height: 1.5; /* Øker linjeavstanden for bedre lesbarhet */\r\n}\r\n\r\n\r\nbody {\r\n  font-family: var(--font-family);\r\n  background-color: var(--background-color);\r\n  color: var(--text-color);\r\n}\r\n\r\n.logo {\r\n  width: 120px; /* Større logo */\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.logo:hover {\r\n  transform: scale(1.05); /* Liten zoom-effekt ved hover */\r\n}\r\n\r\n.home {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center; /* Senterer innholdet horisontalt */\r\n  justify-content: center; /* Senterer innholdet vertikalt for skjermen som helhet */\r\n  height: 100vh; /* Bruker min-height for å ta opp hele skjermens høyde */\r\n  text-align: center; /* Sørger for at tekst er sentrert */\r\n}\r\n\r\n.action-button, .logout-button {\r\n  width: 90%; /* Responsiv bredde */\r\n  max-width: 300px; /* Maks bredde for å unngå for store knapper */\r\n  height: 50px;\r\n  margin: 10px 0;\r\n  border-radius: 5px; /* Runde hjørner */\r\n  transition: background-color 0.3s ease;\r\n  margin: 5px; /* Gir litt plass rundt knappene */\r\n  cursor: pointer; /* Viser en peker når musen er over knappen */\r\n}\r\n\r\n.action-button {\r\n  background-color: var(--primary-color);\r\n  border: 1px solid var(--primary-color);\r\n  color: #fff;\r\n}\r\n\r\n.action-button:hover, .logout-button:hover {\r\n  background-color: var(--secondary-color);\r\n  color: #fff;\r\n}\r\n\r\n.logout-button {\r\n  background-color: transparent;\r\n  color: var(--secondary-color);\r\n  border: 1px solid var(--secondary-color);\r\n}\r\n\r\n.actions, .status {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%; /* Full bredde for bedre layout-kontroll */\r\n}\r\n\r\n.status p {\r\n  background-color: #fff; /* Legger til en bakgrunnsfarge for å skille teksten */\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Subtil skygge for dybde */\r\n  border-radius: 5px; /* Runde hjørner */\r\n}\r\n.logo {\r\n  width: 150px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.home {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.home p {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ea5736;\r\n  margin-bottom: 10px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.action-button,\r\n.logout-button {\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #ea5736;\r\n  border: none;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  line-height: 40px;\r\n}\r\n\r\n.logout-button {\r\n  background-color: #fff;\r\n  border: 1px solid #ea5736;\r\n  color: #ea5736;\r\n  margin-top: 10px;\r\n}\r\n\r\n.logs {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.logs h2 {\r\n  text-align: center;\r\n  color: #ea5736;\r\n}\r\n\r\n.logs div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border: 1px solid #ea5736;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.logs button {\r\n  background-color: #ea5736;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n</style>\r\n"],"mappings":";AAiCA,OAAOA,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,MAAK,MAAO,QAAQ;AAE3B,eAAe;EACbC,IAAI,EAAE,UAAU;EAEhBC,UAAU,EAAE;IACVH;EACF,CAAC;EAEDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE,KAAK;MAClBC,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE,EAAE;MACjBC,cAAc,EAAE,CAAC,CAAE;IAErB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,UAAU;IACrC,CAAC;IACDG,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACX,YAAW,GACnBL,MAAM,CAAC,IAAI,CAACK,YAAY,CAAC,CAACY,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,qBAAqB,IAC9D,KAAK;IACX,CAAC;IACDC,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACb,YAAW,GACnBN,MAAM,CAAC,IAAI,CAACM,YAAY,CAAC,CAACW,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,qBAAqB,IAC9D,KAAK;IACX;EACF,CAAC;EAED,MAAME,OAAOA,CAAA,EAAG;IACd,IAAI,IAAI,CAACP,UAAU,EAAE;MACnB,IAAI;QACF,IAAIQ,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,GAAG,CAAC;QACzC,IAAI,CAACnB,QAAO,GAAIiB,QAAQ,CAAClB,IAAI,CAACC,QAAQ;QACtC,IAAI,CAACoB,WAAW,CAAC,CAAC;QAClB,IAAI,CAACC,eAAe,CAAC,CAAC;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;EACF,CAAC;EAEDE,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACbF,OAAO,CAACG,GAAG,CAAC,IAAI,CAAChB,MAAM,CAACC,KAAK,CAACF,UAAU,CAAC;;MAEzC;MACA,IAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,UAAU,EAAE;QAChC,IAAI;UACF;UACA,MAAM,IAAI,CAACS,MAAM,CAACS,IAAI,CAAC,SAAS,CAAC;;UAEjC;UACA,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,QAAQ,CAAC;UAC9B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC7B,EAAE,OAAOR,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC5C;MACF,OAAO;QACLC,OAAO,CAACG,GAAG,CAAC,uBAAuB,CAAC;MACtC;IACF,CAAC;IAED,MAAMK,SAASA,CAAA,EAAG;MAChB,IAAI,CAAC,IAAI,CAAC5B,YAAY,EAAE;QACtB6B,KAAK,CAAC,+CAA+C,CAAC;QACtD;MACF,OAAO;QACL,IAAI;UACF,IAAIf,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACS,IAAI,CAAC,aAAa,CAAC;UACpDK,KAAK,CAACf,QAAQ,CAAClB,IAAI,CAACkC,OAAO,CAAC;UAC5B,IAAI,CAACb,WAAW,CAAC,CAAC;QACpB,EAAE,OAAOE,KAAK,EAAE;UACdU,KAAK,CAACV,KAAK,CAACL,QAAQ,CAAClB,IAAI,CAACkC,OAAO,CAAC;QACpC;MACF;IACF,CAAC;IAED,MAAMC,QAAQA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAAC9B,WAAW,EAAE;QACrB4B,KAAK,CAAC,0CAA0C,CAAC;QACjD;MACF;MACA,IAAI;QACF,MAAM,IAAI,CAACd,MAAM,CAACS,IAAI,CAAC,YAAY,CAAC;QACpC,IAAI,CAACP,WAAW,CAAC,CAAC;QAClB,IAAI,CAACb,cAAc,EAAE;MACvB,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAED,MAAMF,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAIH,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,QAAQ,CAAC;QAC9C;QACA,IAAI,CAAClB,YAAW,GAAI,IAAI,CAACkC,iBAAiB,CACxClB,QAAQ,CAAClB,IAAI,CAACqC,kBAChB,CAAC;QACD,IAAI,CAAClC,YAAW,GAAI,IAAI,CAACiC,iBAAiB,CACxClB,QAAQ,CAAClB,IAAI,CAACsC,kBAChB,CAAC;QACD,IAAI,CAAClC,YAAW,GAAIc,QAAQ,CAAClB,IAAI,CAACuC,cAAc;QAChD,IAAI,CAAClC,WAAU,GAAIa,QAAQ,CAAClB,IAAI,CAACwC,aAAa;;QAE9C;QACA,IAAI,CAAClB,eAAe,CAAC,CAAC;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDa,iBAAiBA,CAACK,OAAO,EAAE;MACzB,OAAO5C,MAAM,CAAC6C,GAAG,CAACD,OAAO,CAAC,CAAC3B,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,qBAAqB,CAAC;IAClE,CAAC;IAED;IACA4B,iBAAiBA,CAACC,SAAS,EAAE;MAC3B,OAAO/C,MAAM,CAAC+C,SAAS,CAAC,CAACF,GAAG,CAAC,CAAC,CAAC3B,MAAM,CAAC,CAAC;IACzC,CAAC;IAEDO,eAAeA,CAAA,EAAG;MAChBuB,WAAW,CAAC,MAAM;QAChB,MAAMC,GAAE,GAAIjD,MAAM,CAAC,CAAC,CAACkD,IAAI,CAAC,CAAC,EAAE;QAC7B,MAAMC,eAAc,GAAKC,IAAI,IAAK;UAChC,IAAI,CAACA,IAAG,IAAK,CAACpD,MAAM,CAACoD,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE;YACpC,OAAO,KAAK;UACd;UACA,MAAMC,QAAO,GAAItD,MAAM,CAACsD,QAAQ,CAC9BtD,MAAM,CAACoD,IAAI,CAAC,CAACF,IAAI,CAAC,IAAID,GAAG,EACzB,SACF,CAAC;UACD,IAAIK,QAAQ,CAACC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC7B,OAAO,KAAK;UACd;UACA,OAAQ,GAAED,QAAQ,CAACE,KAAK,CAAC,CAAC,WAAWF,QAAQ,CAACG,OAAO,CAAC,CAAC,aAAaH,QAAQ,CAACI,OAAO,CAAC,CAAC,UAAU;QAClG,CAAC;QAED,IAAI,CAAChD,aAAY,GAAI,IAAI,CAACJ,YAAW,GACjC6C,eAAe,CAACnD,MAAM,CAAC,IAAI,CAACM,YAAY,CAAC,CAACqD,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,IACzD,KAAK;QACT,IAAI,CAAClD,aAAY,GACf,IAAI,CAACH,YAAW,IAAK,IAAI,CAACD,YAAW,GACjC8C,eAAe,CACbnD,MAAM,CAAC4D,GAAG,CACR5D,MAAM,CAAC,IAAI,CAACM,YAAY,CAAC,CAACqD,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,EACzC3D,MAAM,CAAC,IAAI,CAACK,YAAY,CAAC,CAACsD,GAAG,CAAC,CAAC,EAAE,OAAO,CAC1C,CACF,IACA,IAAI,CAACrD,YAAW,GAChB6C,eAAe,CAACnD,MAAM,CAAC,IAAI,CAACM,YAAY,CAAC,CAACqD,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,IACzD,KAAK;MACb,CAAC,EAAE,IAAI,CAAC;IACV;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
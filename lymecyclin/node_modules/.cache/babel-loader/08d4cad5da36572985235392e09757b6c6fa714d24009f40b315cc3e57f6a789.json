{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  class: \"weekdays\"\n};\nconst _hoisted_4 = {\n  class: \"days\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.currentMonth) + \" \" + _toDisplayString($data.currentYear), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.weekdays, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"weekday\",\n      key: day\n    }, _toDisplayString(day), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.daysInMonth, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"day\", {\n        'is-today': day.isToday\n      }]),\n      key: day.date\n    }, _toDisplayString(day.date.getDate()), 3 /* TEXT, CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","currentMonth","currentYear","_hoisted_3","_Fragment","_renderList","weekdays","day","key","_hoisted_4","daysInMonth","_normalizeClass","isToday","date","getDate"],"sources":["C:\\Users\\mariu\\Documents\\Kode\\Prosjekter\\melk\\lymecyclin\\src\\components\\PillsCalendar.vue"],"sourcesContent":["<template>\r\n    <div class=\"calendar\">\r\n      <div class=\"header\">\r\n        <h2>{{ currentMonth }} {{ currentYear }}</h2>\r\n      </div>\r\n      <div class=\"weekdays\">\r\n        <div class=\"weekday\" v-for=\"day in weekdays\" :key=\"day\">{{ day }}</div>\r\n      </div>\r\n      <div class=\"days\">\r\n        <div class=\"day\" v-for=\"day in daysInMonth\" :key=\"day.date\" :class=\"{ 'is-today': day.isToday }\">\r\n          {{ day.date.getDate() }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'PillsCalendar',\r\n    data() {\r\n      return {\r\n        currentYear: new Date().getFullYear(),\r\n        currentMonth: new Date().toLocaleString('default', { month: 'long' }),\r\n        weekdays: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],\r\n        daysInMonth: [],\r\n      };\r\n    },\r\n    created() {\r\n      this.generateCalendarDays();\r\n    },\r\n    methods: {\r\n        generateCalendarDays() {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = today.getMonth();\r\n    const daysInCurrentMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n    this.daysInMonth = [];\r\n    for (let i = 1; i <= daysInCurrentMonth; i++) {\r\n      let dayDate = new Date(year, month, i);\r\n      this.daysInMonth.push({\r\n        date: dayDate,\r\n        isToday: dayDate.toDateString() === new Date().toDateString(),\r\n      });\r\n    }\r\n  }\r\n    }\r\n  };\r\n\r\n  </script>\r\n  \r\n  <style>\r\n  .calendar {\r\n    background: #4a90e2; /* Juster etter din stilguide */\r\n    color: white;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n  }\r\n  .header {\r\n    text-align: center;\r\n  }\r\n  .weekdays {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0 10px;\r\n  }\r\n  .days {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: start;\r\n  }\r\n  .day {\r\n    width: 14.28%; /* 100% delt p√• 7 dager i uken */\r\n    padding: 10px 0;\r\n    text-align: center;\r\n  }\r\n  .is-today {\r\n    background: #3278b3; /* En kontrastfarge for dagens dato */\r\n    border-radius: 50%;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAQ;;EAGdA,KAAK,EAAC;AAAU;;EAGhBA,KAAK,EAAC;AAAM;;uBAPnBC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAA6C,YAAAE,gBAAA,CAAtCC,KAAA,CAAAC,YAAY,IAAG,GAAC,GAAAF,gBAAA,CAAGC,KAAA,CAAAE,WAAW,iB,GAEvCL,mBAAA,CAEM,OAFNM,UAEM,I,kBADJR,mBAAA,CAAuES,SAAA,QAN/EC,WAAA,CAM2CL,KAAA,CAAAM,QAAQ,EAAfC,GAAG;yBAA/BZ,mBAAA,CAAuE;MAAlED,KAAK,EAAC,SAAS;MAA0Bc,GAAG,EAAED;wBAAQA,GAAG;oCAEhEV,mBAAA,CAIM,OAJNY,UAIM,I,kBAHJd,mBAAA,CAEMS,SAAA,QAXdC,WAAA,CASuCL,KAAA,CAAAU,WAAW,EAAlBH,GAAG;yBAA3BZ,mBAAA,CAEM;MAFDD,KAAK,EATlBiB,eAAA,EASmB,KAAK;QAAA,YAAkEJ,GAAG,CAACK;MAAO;MAAhDJ,GAAG,EAAED,GAAG,CAACM;wBACjDN,GAAG,CAACM,IAAI,CAACC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
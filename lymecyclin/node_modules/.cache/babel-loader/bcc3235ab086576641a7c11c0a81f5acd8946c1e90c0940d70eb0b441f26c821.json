{"ast":null,"code":"import { createStore } from 'vuex';\nimport VuexPersist from 'vuex-persist';\n\n// Opprett en instans av VuexPersist\nconst vuexLocal = new VuexPersist({\n  key: 'erLoggetInn',\n  // Nøkkelen som brukes for å lagre data i localStorage\n  storage: window.localStorage // Angir at localStorage skal brukes for lagring\n  // Du kan også velge å kun persistere bestemte deler av tilstanden ved å bruke `reducer`-egenskapen\n});\nexport default createStore({\n  plugins: [vuexLocal.plugin],\n  // Bruk vuexLocal.plugin her\n  state: {\n    isLoggedIn: false\n    // other state...\n  },\n  mutations: {\n    setLoggedIn(state, value) {\n      state.isLoggedIn = value;\n    },\n    logOut(state) {\n      state.isLoggedIn = false;\n    }\n  },\n  actions: {\n    logIn({\n      commit\n    }, value) {\n      commit('setLoggedIn', value);\n    },\n    logout({\n      commit\n    }) {\n      commit('logOut');\n    }\n    // other actions...\n  },\n  getters: {\n    isLoggedIn: state => state.isLoggedIn,\n    isLoggedOut: state => !state.isLoggedIn\n    // other getters...\n  }\n});","map":{"version":3,"names":["createStore","VuexPersist","vuexLocal","key","storage","window","localStorage","plugins","plugin","state","isLoggedIn","mutations","setLoggedIn","value","logOut","actions","logIn","commit","logout","getters","isLoggedOut"],"sources":["C:/Users/mariu/Documents/Kode/Prosjekter/melk/lymecyclin/src/store.js"],"sourcesContent":["import { createStore } from 'vuex';\r\nimport VuexPersist from 'vuex-persist';\r\n\r\n\r\n// Opprett en instans av VuexPersist\r\nconst vuexLocal  = new VuexPersist({\r\n  key: 'erLoggetInn', // Nøkkelen som brukes for å lagre data i localStorage\r\n  storage: window.localStorage, // Angir at localStorage skal brukes for lagring\r\n  // Du kan også velge å kun persistere bestemte deler av tilstanden ved å bruke `reducer`-egenskapen\r\n});\r\n\r\n\r\n\r\nexport default createStore({\r\n  plugins: [vuexLocal.plugin], // Bruk vuexLocal.plugin her\r\n  state: {\r\n    isLoggedIn: false,\r\n    // other state...\r\n  },\r\n  mutations: {\r\n    setLoggedIn(state, value) {\r\n      state.isLoggedIn = value;\r\n    },\r\n    logOut(state){\r\n      state.isLoggedIn = false;\r\n    }\r\n  },\r\n  actions: {\r\n    logIn({ commit }, value) {\r\n      commit('setLoggedIn', value);\r\n    },\r\n    logout({ commit }){\r\n      commit('logOut')\r\n    }\r\n    // other actions...\r\n  },\r\n  getters: {\r\n    isLoggedIn: state => state.isLoggedIn,\r\n    isLoggedOut: state => !state.isLoggedIn,\r\n    // other getters...\r\n  },\r\n});"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,WAAW,MAAM,cAAc;;AAGtC;AACA,MAAMC,SAAS,GAAI,IAAID,WAAW,CAAC;EACjCE,GAAG,EAAE,aAAa;EAAE;EACpBC,OAAO,EAAEC,MAAM,CAACC,YAAY,CAAE;EAC9B;AACF,CAAC,CAAC;AAIF,eAAeN,WAAW,CAAC;EACzBO,OAAO,EAAE,CAACL,SAAS,CAACM,MAAM,CAAC;EAAE;EAC7BC,KAAK,EAAE;IACLC,UAAU,EAAE;IACZ;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,WAAWA,CAACH,KAAK,EAAEI,KAAK,EAAE;MACxBJ,KAAK,CAACC,UAAU,GAAGG,KAAK;IAC1B,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAC;MACXA,KAAK,CAACC,UAAU,GAAG,KAAK;IAC1B;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEJ,KAAK,EAAE;MACvBI,MAAM,CAAC,aAAa,EAAEJ,KAAK,CAAC;IAC9B,CAAC;IACDK,MAAMA,CAAC;MAAED;IAAO,CAAC,EAAC;MAChBA,MAAM,CAAC,QAAQ,CAAC;IAClB;IACA;EACF,CAAC;EACDE,OAAO,EAAE;IACPT,UAAU,EAAED,KAAK,IAAIA,KAAK,CAACC,UAAU;IACrCU,WAAW,EAAEX,KAAK,IAAI,CAACA,KAAK,CAACC;IAC7B;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nimport _imports_0 from '../assets/logo.png';\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"greeting-container\"\n};\nconst _hoisted_3 = {\n  class: \"actions\"\n};\nconst _hoisted_4 = {\n  class: \"status\"\n};\nconst _hoisted_5 = {\n  class: \"status-card\"\n};\nconst _hoisted_6 = {\n  class: \"status-card\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"login-signup-container\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"action-button\"\n}, \"Sign Up\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"action-button\"\n}, \"Log In\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 2,\n  class: \"logout-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PillsCalendar = _resolveComponent(\"PillsCalendar\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Logo\",\n    class: \"logo\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/'))\n  }), $options.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, \"Hello, \" + _toDisplayString($data.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"action-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.drinkMilk && $options.drinkMilk(...args))\n  }, \"Drink Milk\"), _createElementVNode(\"button\", {\n    class: \"action-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.takePill && $options.takePill(...args))\n  }, \"Take Pill\")]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, \"When can I drink milk: \" + _toDisplayString($data.milkCountdown), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, \"When can I take next pill: \" + _toDisplayString($data.pillCountdown), 1 /* TEXT */)])]), (_openBlock(), _createBlock(_component_PillsCalendar, {\n    key: $data.pillTakenCount\n  }))])) : _createCommentVNode(\"v-if\", true), !$options.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_router_link, {\n    to: \"/sign-up\"\n  }, {\n    default: _withCtx(() => [_hoisted_8]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_hoisted_9]),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true), $options.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    class: \"logout-button\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$router.push('/profileDash'))\n  }, \"Profile\"), _createElementVNode(\"button\", {\n    class: \"logout-button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.logOut && $options.logOut(...args))\n  }, \"Log Out\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementVNode","_createElementBlock","_hoisted_1","src","alt","onClick","_cache","$event","_ctx","$router","push","$options","isLoggedIn","_hoisted_2","_toDisplayString","$data","username","_hoisted_3","args","drinkMilk","takePill","_hoisted_4","_hoisted_5","milkCountdown","_hoisted_6","pillCountdown","_createBlock","_component_PillsCalendar","pillTakenCount","_createCommentVNode","_hoisted_7","_createVNode","_component_router_link","to","default","_withCtx","_hoisted_8","_","_hoisted_9","_hoisted_10","logOut"],"sources":["C:\\Users\\mariu\\Documents\\Kode\\Prosjekter\\melk\\lymecyclin\\src\\components\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"logo\" @click=\"$router.push('/')\"/>\r\n    <div v-if=\"isLoggedIn\" class=\"greeting-container\">\r\n      <h1>Hello, {{ username }}</h1>\r\n      <div class=\"actions\">\r\n        <button class=\"action-button\" @click=\"drinkMilk\">Drink Milk</button>\r\n        <button class=\"action-button\" @click=\"takePill\">Take Pill</button>\r\n      </div>\r\n      <div class=\"status\">\r\n        <div class=\"status-card\">\r\n          <p>When can I drink milk: {{ milkCountdown }}</p>\r\n        </div>\r\n        <div class=\"status-card\">\r\n          <p>When can I take next pill: {{ pillCountdown }}</p>\r\n        </div>\r\n      </div>\r\n      <PillsCalendar :key=\"pillTakenCount\"/>\r\n    </div>\r\n    <div v-if=\"!isLoggedIn\" class=\"login-signup-container\">\r\n      <router-link to=\"/sign-up\">\r\n        <button class=\"action-button\">Sign Up</button>\r\n      </router-link>\r\n      <router-link to=\"/login\">\r\n        <button class=\"action-button\">Log In</button>\r\n      </router-link>\r\n    </div>\r\n    <div v-if=\"isLoggedIn\" class=\"logout-container\">\r\n      <button class=\"logout-button\" @click=\"$router.push('/profileDash')\">Profile</button>\r\n      <button class=\"logout-button\" @click=\"logOut\">Log Out</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport PillsCalendar from \"./PillsCalendar.vue\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n  name: \"HomeView\",\r\n\r\n  components: {\r\n    PillsCalendar,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      lastMilkTime: \"\",\r\n      lastPillTime: \"\",\r\n      canDrinkMilk: false,\r\n      canTakePill: false,\r\n      pillCountdown: \"\",\r\n      milkCountdown: \"\",\r\n      pillTakenCount: 0, // Forcing re-render of PillsCalendar\r\n\r\n    };\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return this.$store.state.isLoggedIn;\r\n    },\r\n    lastMilkTimeDisplay() {\r\n      return this.lastMilkTime\r\n        ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : \"N/A\";\r\n    },\r\n    lastPillTimeDisplay() {\r\n      return this.lastPillTime\r\n        ? moment(this.lastPillTime).local().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : \"N/A\";\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    if (this.isLoggedIn) {\r\n      try {\r\n        let response = await this.$axios.get(\"/\");\r\n        this.username = response.data.username;\r\n        this.checkStatus();\r\n        this.startCountdowns();\r\n      } catch (error) {\r\n        console.error(\"Failed to get user:\", error);\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async logOut() {\r\n      console.log(this.$store.state.isLoggedIn);\r\n\r\n      // Check if the user is logged in\r\n      if (this.$store.state.isLoggedIn) {\r\n        try {\r\n          // Log out the user on the server\r\n          await this.$axios.post(\"/logout\");\r\n\r\n          // Log out the user on the client\r\n          this.$store.dispatch(\"logout\");\r\n          this.$router.push(\"/login\");\r\n        } catch (error) {\r\n          console.error(\"Failed to log out:\", error);\r\n        }\r\n      } else {\r\n        console.log(\"User is not logged in\");\r\n      }\r\n    },\r\n\r\n    async drinkMilk() {\r\n      if (!this.canDrinkMilk) {\r\n        alert(\"Cannot drink milk since you have taken a pill\");\r\n        return;\r\n      } else {\r\n        try {\r\n          let response = await this.$axios.post(\"/drink_milk\");\r\n          alert(response.data.message);\r\n          this.checkStatus();\r\n        } catch (error) {\r\n          alert(error.response.data.message);\r\n        }\r\n      }\r\n    },\r\n\r\n    async takePill() {\r\n      if (!this.canTakePill) {\r\n        alert(\"Cannot take pill less than 5 hours apart\");\r\n        return;\r\n      }\r\n      try {\r\n        await this.$axios.post(\"/take_pill\");\r\n        this.checkStatus();\r\n        this.pillTakenCount++;\r\n      } catch (error) {\r\n        console.error(\"Failed to log pill:\", error);\r\n      }\r\n    },\r\n\r\n    async checkStatus() {\r\n      try {\r\n        let response = await this.$axios.get(\"/can_i\");\r\n        // Antar at backend returnerer UTC tidspunkt som ISO string\r\n        this.lastMilkTime = this.convertUtcToLocal(\r\n          response.data.last_milk_time_utc\r\n        );\r\n        this.lastPillTime = this.convertUtcToLocal(\r\n          response.data.last_pill_time_utc\r\n        );\r\n        this.canDrinkMilk = response.data.can_drink_milk;\r\n        this.canTakePill = response.data.can_take_pill;\r\n\r\n        // Oppdater nedtelling basert på nye tider fra server\r\n        this.startCountdowns();\r\n      } catch (error) {\r\n        console.error(\"Failed to check status:\", error);\r\n      }\r\n    },\r\n    convertUtcToLocal(utcTime) {\r\n      return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\r\n    },\r\n\r\n    // Eksempel på konvertering fra lokal tid til UTC før sending til backend\r\n    convertLocalToUtc(localTime) {\r\n      return moment(localTime).utc().format();\r\n    },\r\n\r\n    startCountdowns() {\r\n      setInterval(() => {\r\n        const now = moment().unix(); // Get current time in UNIX timestamp\r\n        const updateCountdown = (time) => {\r\n          if (!time || !moment(time).isValid()) {\r\n            return \"Now\";\r\n          }\r\n          const duration = moment.duration(\r\n            moment(time).unix() - now,\r\n            \"seconds\"\r\n          );\r\n          if (duration.asSeconds() <= 0) {\r\n            return \"Now\";\r\n          }\r\n          return `${duration.hours()} hours, ${duration.minutes()} minutes, ${duration.seconds()} seconds`;\r\n        };\r\n\r\n        this.milkCountdown = this.lastPillTime\r\n          ? updateCountdown(moment(this.lastPillTime).add(1, \"hours\"))\r\n          : \"Now\";\r\n        this.pillCountdown =\r\n          this.lastPillTime && this.lastMilkTime\r\n            ? updateCountdown(\r\n                moment.max(\r\n                  moment(this.lastPillTime).add(5, \"hours\"),\r\n                  moment(this.lastMilkTime).add(1, \"hours\")\r\n                )\r\n              )\r\n            : this.lastPillTime\r\n            ? updateCountdown(moment(this.lastPillTime).add(5, \"hours\"))\r\n            : \"Now\";\r\n      }, 1000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Legger til grunnleggende stiler basert på din beskrivelse */\r\n:root {\r\n  --primary-color: #4a90e2; /* Lys blå */\r\n  --secondary-color: #ea5736; /* Oransje */\r\n  --text-color: #333; /* Mørkere tekst */\r\n  --background-color: #f5f5f5; /* Lys bakgrunn */\r\n  --font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n}\r\n\r\nbody {\r\n  font-family: var(--font-family);\r\n  background-color: var(--background-color);\r\n  color: var(--text-color);\r\n}\r\n\r\n/* Stiler for logo, inkludert hover-effekt */\r\n.logo {\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease;\r\n}\r\n.logo:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n/* Stiler for handling og statusknapper, inkludert responsivitet */\r\n.action-button, .logout-button {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 15px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n.action-button:hover, .logout-button:hover {\r\n  background-color: var(--secondary-color);\r\n}\r\n\r\n/* Tilleggsstiler for å håndtere layout og responsivitet */\r\n.container {\r\n  max-width: 800px;\r\n  margin: auto;\r\n  padding: 20px;\r\n}\r\n\r\n/* Responsive design */\r\n@media (max-width: 768px) {\r\n  .action-button, .logout-button {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":";;OAESA,UAAwB;;EAD1BC,KAAK,EAAC;AAAM;;EADnBC,GAAA;EAG2BD,KAAK,EAAC;;;EAEtBA,KAAK,EAAC;AAAS;;EAIfA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAa;;EAGnBA,KAAK,EAAC;AAAa;;EAbhCC,GAAA;EAmB4BD,KAAK,EAAC;;gCAE1BE,mBAAA,CAA8C;EAAtCF,KAAK,EAAC;AAAe,GAAC,SAAO;gCAGrCE,mBAAA,CAA6C;EAArCF,KAAK,EAAC;AAAe,GAAC,QAAM;;EAxB5CC,GAAA;EA2B2BD,KAAK,EAAC;;;;;uBA1B/BG,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJF,mBAAA,CAAkF;IAA7EG,GAAwB,EAAxBN,UAAwB;IAACO,GAAG,EAAC,MAAM;IAACN,KAAK,EAAC,MAAM;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;MAC/DC,QAAA,CAAAC,UAAU,I,cAArBX,mBAAA,CAeM,OAfNY,UAeM,GAdJb,mBAAA,CAA8B,YAA1B,SAAO,GAAAc,gBAAA,CAAGC,KAAA,CAAAC,QAAQ,kBACtBhB,mBAAA,CAGM,OAHNiB,UAGM,GAFJjB,mBAAA,CAAoE;IAA5DF,KAAK,EAAC,eAAe;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAY,IAAA,KAAEP,QAAA,CAAAQ,SAAA,IAAAR,QAAA,CAAAQ,SAAA,IAAAD,IAAA,CAAS;KAAE,YAAU,GAC3DlB,mBAAA,CAAkE;IAA1DF,KAAK,EAAC,eAAe;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAY,IAAA,KAAEP,QAAA,CAAAS,QAAA,IAAAT,QAAA,CAAAS,QAAA,IAAAF,IAAA,CAAQ;KAAE,WAAS,E,GAE3DlB,mBAAA,CAOM,OAPNqB,UAOM,GANJrB,mBAAA,CAEM,OAFNsB,UAEM,GADJtB,mBAAA,CAAiD,WAA9C,yBAAuB,GAAAc,gBAAA,CAAGC,KAAA,CAAAQ,aAAa,iB,GAE5CvB,mBAAA,CAEM,OAFNwB,UAEM,GADJxB,mBAAA,CAAqD,WAAlD,6BAA2B,GAAAc,gBAAA,CAAGC,KAAA,CAAAU,aAAa,iB,oBAGlDC,YAAA,CAAsCC,wBAAA;IAAtB5B,GAAG,EAAEgB,KAAA,CAAAa;EAAc,I,KAjBzCC,mBAAA,gB,CAmBgBlB,QAAA,CAAAC,UAAU,I,cAAtBX,mBAAA,CAOM,OAPN6B,UAOM,GANJC,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAU;IApBhCC,OAAA,EAAAC,QAAA,CAqBQ,MAA8C,CAA9CC,UAA8C,C;IArBtDC,CAAA;MAuBMN,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAQ;IAvB9BC,OAAA,EAAAC,QAAA,CAwBQ,MAA6C,CAA7CG,UAA6C,C;IAxBrDD,CAAA;UAAAR,mBAAA,gBA2BelB,QAAA,CAAAC,UAAU,I,cAArBX,mBAAA,CAGM,OAHNsC,WAGM,GAFJvC,mBAAA,CAAoF;IAA5EF,KAAK,EAAC,eAAe;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;KAAkB,SAAO,GAC3EV,mBAAA,CAA8D;IAAtDF,KAAK,EAAC,eAAe;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAY,IAAA,KAAEP,QAAA,CAAA6B,MAAA,IAAA7B,QAAA,CAAA6B,MAAA,IAAAtB,IAAA,CAAM;KAAE,SAAO,E,KA7B3DW,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}
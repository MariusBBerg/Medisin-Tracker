{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '../assets/logo.png';\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  class: \"status\"\n};\nconst _hoisted_3 = {\n  class: \"logs\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Milk Logs\", -1 /* HOISTED */);\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add Milk Log\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Pill Logs\", -1 /* HOISTED */);\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add Pill Log\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FlashMessage = _resolveComponent(\"FlashMessage\");\n  const _component_ModalView = _resolveComponent(\"ModalView\");\n  const _component_ModalComponent = _resolveComponent(\"ModalComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    class: \"logo\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/'))\n  }), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"Last milk time: \" + _toDisplayString($data.lastMilkTime), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Can drink milk: \" + _toDisplayString($data.canDrinkMilk), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Can take pill: \" + _toDisplayString($data.canTakePill), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.milkLogs, log => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: log\n    }, [$data.editingMilkLog === log ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"datetime-local\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newMilkLogTime = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMilkLogTime]]), _createElementVNode(\"button\", {\n      onClick: _cache[2] || (_cache[2] = $event => $options.saveEditingMilkLog($data.newMilkLogTime))\n    }, \"Save\"), _createElementVNode(\"button\", {\n      onClick: _cache[3] || (_cache[3] = (...args) => $options.cancelEditingMilkLog && $options.cancelEditingMilkLog(...args))\n    }, \"Cancel\")], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString($options.formatDate(log)) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteMilkLog(log)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      onClick: $event => $options.startEditingMilkLog(log)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_6)], 64 /* STABLE_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_FlashMessage, {\n    message: $data.milkFlashMessage,\n    type: $data.flashType\n  }, null, 8 /* PROPS */, [\"message\", \"type\"]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.openMilkModal && $options.openMilkModal(...args))\n  }, \"Add Milk Log\"), $data.showMilkModal ? (_openBlock(), _createBlock(_component_ModalView, {\n    key: 0,\n    onClose: $options.closeMilkModal\n  }, {\n    default: _withCtx(() => [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n      type: \"datetime-local\",\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newMilkLogTime = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMilkLogTime]]), _createElementVNode(\"button\", {\n      onClick: _cache[6] || (_cache[6] = $event => $options.addMilkLog($data.newMilkLogTime))\n    }, \"Save\"), _createElementVNode(\"button\", {\n      onClick: _cache[7] || (_cache[7] = (...args) => $options.closeMilkModal && $options.closeMilkModal(...args))\n    }, \"Cancel\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClose\"])) : _createCommentVNode(\"v-if\", true), _hoisted_8, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.pillLogs, log => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: log\n    }, [$data.editingPillLog === log ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"datetime-local\",\n      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.newPillLogTime = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPillLogTime]]), _createElementVNode(\"button\", {\n      onClick: _cache[9] || (_cache[9] = $event => $options.saveEditingPillLog($data.newPillLogTime))\n    }, \"Save\"), _createElementVNode(\"button\", {\n      onClick: _cache[10] || (_cache[10] = (...args) => $options.cancelEditingPillLog && $options.cancelEditingPillLog(...args))\n    }, \"Cancel\")], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString($options.formatDate(log)) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deletePillLog(log)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"button\", {\n      onClick: $event => $options.startEditingPillLog(log)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_10)], 64 /* STABLE_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_FlashMessage, {\n    message: $data.pillFlashMessage,\n    type: $data.flashType\n  }, null, 8 /* PROPS */, [\"message\", \"type\"]), _createElementVNode(\"button\", {\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.openPillModal && $options.openPillModal(...args))\n  }, \"Add Pill Log\"), $data.showPillModal ? (_openBlock(), _createBlock(_component_ModalView, {\n    key: 1,\n    onClose: $options.closePillModal\n  }, {\n    default: _withCtx(() => [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n      type: \"datetime-local\",\n      \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.newPillLogTime = $event)\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPillLogTime]]), _createElementVNode(\"button\", {\n      onClick: _cache[13] || (_cache[13] = $event => $options.addPillLog($data.newPillLogTime))\n    }, \"Save\"), _createElementVNode(\"button\", {\n      onClick: _cache[14] || (_cache[14] = (...args) => $options.closePillModal && $options.closePillModal(...args))\n    }, \"Cancel\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClose\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"button\", {\n    class: \"logout-button\",\n    onClick: _cache[15] || (_cache[15] = (...args) => $options.logOut && $options.logOut(...args))\n  }, \"Log Out\"), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[16] || (_cache[16] = (...args) => _ctx.openModal && _ctx.openModal(...args))\n  }, \"Open generic modal\")]), _createVNode(_component_ModalComponent, {\n    isOpen: _ctx.isModalOpened,\n    onModalClose: _ctx.closeModal,\n    onSubmit: _ctx.submitHandler,\n    name: \"first-modal\"\n  }, null, 8 /* PROPS */, [\"isOpen\", \"onModalClose\", \"onSubmit\"])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","_createElementBlock","_hoisted_1","src","onClick","_cache","$event","_ctx","$router","push","_hoisted_2","_toDisplayString","$data","lastMilkTime","canDrinkMilk","canTakePill","_hoisted_3","_hoisted_4","_Fragment","_renderList","milkLogs","log","key","editingMilkLog","type","newMilkLogTime","$options","saveEditingMilkLog","args","cancelEditingMilkLog","_createTextVNode","formatDate","deleteMilkLog","_hoisted_5","startEditingMilkLog","_hoisted_6","_createVNode","_component_FlashMessage","message","milkFlashMessage","flashType","openMilkModal","showMilkModal","_createBlock","_component_ModalView","onClose","closeMilkModal","default","_withCtx","_hoisted_7","addMilkLog","_","_createCommentVNode","_hoisted_8","pillLogs","editingPillLog","newPillLogTime","saveEditingPillLog","cancelEditingPillLog","deletePillLog","_hoisted_9","startEditingPillLog","_hoisted_10","pillFlashMessage","openPillModal","showPillModal","closePillModal","_hoisted_11","addPillLog","logOut","openModal","_component_ModalComponent","isOpen","isModalOpened","onModalClose","closeModal","onSubmit","submitHandler","name"],"sources":["C:\\Users\\mariu\\Documents\\Kode\\Prosjekter\\melk\\lymecyclin\\src\\components\\ProfileDash.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <img src=\"../assets/logo.png\" class=\"logo\" @click=\"$router.push('/')\" />\r\n    <div class=\"status\">\r\n      <p>Last milk time: {{ lastMilkTime }}</p>\r\n      <p>Can drink milk: {{ canDrinkMilk }}</p>\r\n      <p>Can take pill: {{ canTakePill }}</p>\r\n    </div>\r\n\r\n    <div class=\"logs\">\r\n      <h2>Milk Logs</h2>\r\n      <div v-for=\"log in milkLogs\" :key=\"log\">\r\n        <template v-if=\"editingMilkLog === log\">\r\n          <input type=\"datetime-local\" v-model=\"newMilkLogTime\" />\r\n          <button @click=\"saveEditingMilkLog(newMilkLogTime)\">Save</button>\r\n          <button @click=\"cancelEditingMilkLog\">Cancel</button>\r\n        </template>\r\n        <template v-else>\r\n          {{ formatDate(log) }}\r\n          <button @click=\"deleteMilkLog(log)\">Delete</button>\r\n          <button @click=\"startEditingMilkLog(log)\">Edit</button>\r\n        </template>\r\n      </div>\r\n      <FlashMessage :message=\"milkFlashMessage\" :type=\"flashType\" />\r\n\r\n      <button @click=\"openMilkModal\">Add Milk Log</button>\r\n      <ModalView v-if=\"showMilkModal\" @close=\"closeMilkModal\">\r\n        <h2>Add Milk Log</h2>\r\n        <input type=\"datetime-local\" v-model=\"newMilkLogTime\" />\r\n        <button @click=\"addMilkLog(newMilkLogTime)\">Save</button>\r\n        <button @click=\"closeMilkModal\">Cancel</button>\r\n      </ModalView>\r\n\r\n      <h2>Pill Logs</h2>\r\n      <div v-for=\"log in pillLogs\" :key=\"log\">\r\n        <template v-if=\"editingPillLog === log\">\r\n          <input type=\"datetime-local\" v-model=\"newPillLogTime\" />\r\n          <button @click=\"saveEditingPillLog(newPillLogTime)\">Save</button>\r\n          <button @click=\"cancelEditingPillLog\">Cancel</button>\r\n        </template>\r\n        <template v-else>\r\n          {{ formatDate(log) }}\r\n          <button @click=\"deletePillLog(log)\">Delete</button>\r\n          <button @click=\"startEditingPillLog(log)\">Edit</button>\r\n        </template>\r\n      </div>\r\n      <FlashMessage :message=\"pillFlashMessage\" :type=\"flashType\" />\r\n      <button @click=\"openPillModal\">Add Pill Log</button>\r\n      <ModalView v-if=\"showPillModal\" @close=\"closePillModal\">\r\n        <h2>Add Pill Log</h2>\r\n        <input type=\"datetime-local\" v-model=\"newPillLogTime\" />\r\n        <button @click=\"addPillLog(newPillLogTime)\">Save</button>\r\n        <button @click=\"closePillModal\">Cancel</button>\r\n      </ModalView>\r\n    </div>\r\n\r\n    <button class=\"logout-button\" @click=\"logOut\">Log Out</button>\r\n    <div>\r\n        <button @click=\"openModal\">Open generic modal</button>\r\n      </div>\r\n      <ModalComponent :isOpen=\"isModalOpened\" @modal-close=\"closeModal\" @submit=\"submitHandler\" name=\"first-modal\"/>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nimport FlashMessage from \"./FlashMessage.vue\";\r\nimport ModalView from './Modal.vue';\r\nimport { ref } from \"vue\";\r\nimport Modal2View from './Modal2View.vue';\r\n\r\n\r\nexport default {\r\n  name: \"ProfileDash\",\r\n  components: {\r\n    FlashMessage,\r\n    ModalView,\r\n  },\r\n  setup() {\r\n    const isModalOpened = ref(false);\r\n\r\nconst openModal = () => {\r\n  isModalOpened.value = true;\r\n};\r\nconst closeModal = () => {\r\n  isModalOpened.value = false;\r\n};\r\n\r\nconst submitHandler = ()=>{\r\n  //here you do whatever\r\n}\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      lastMilkTime: \"\",\r\n      canDrinkMilk: false,\r\n      canTakePill: false,\r\n      milkLogs: [],\r\n      pillLogs: [],\r\n      editingMilkLog: null,\r\n      newMilkLogTime: null,\r\n      editingPillLog: null, // New data property for tracking which log is being edited\r\n      newPillLogTime: null, // New data property for tracking the new time for the edited log\r\n      milkFlashMessage: \"\",\r\n      pillFlashMessage: \"\",\r\n      flashType: \"info\",\r\n      showMilkModal: false,\r\n      showPillModal: false\r\n    };\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return this.$store.state.isLoggedIn;\r\n    },\r\n    lastMilkTimeDisplay() {\r\n      return this.lastMilkTime\r\n        ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        : \"N/A\";\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    if (this.isLoggedIn) {\r\n      try {\r\n        let response = await this.$axios.get(\"/\");\r\n        this.username = response.data.username;\r\n        this.checkStatus();\r\n        this.getMilkLogs();\r\n        this.getPillLogs();\r\n      } catch (error) {\r\n        console.error(\"Failed to get user:\", error);\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    formatDate(date) {\r\n      const options = {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      };\r\n      const utcDate = new Date(date + \"Z\"); // Legger til 'Z' for å indikere at det er en UTC tid\r\n      return utcDate.toLocaleString(undefined, options);\r\n    },\r\n    isFutureDate(date) {\r\n      return moment(date).isAfter(moment());\r\n    },\r\n\r\n    async logOut() {\r\n      if (this.$store.state.isLoggedIn) {\r\n        try {\r\n          await this.$axios.post(\"/logout\");\r\n          this.$store.dispatch(\"logout\");\r\n          this.$router.push(\"/login\");\r\n        } catch (error) {\r\n          console.error(\"Failed to log out:\", error);\r\n        }\r\n      } else {\r\n        console.log(\"User is not logged in\");\r\n      }\r\n    },\r\n    async getMilkLogs() {\r\n      let response = await this.$axios.get(\"/milk_logs\");\r\n      this.milkLogs = response.data.milk_logs;\r\n    },\r\n\r\n    async getPillLogs() {\r\n      let response = await this.$axios.get(\"/pill_logs\");\r\n      this.pillLogs = response.data.pill_logs;\r\n    },\r\n\r\n\r\n    /*Må kanskje legge til en logikk som godtar å legge til melk i fortiden.\r\n    Sånn det er nå kan jeg ikke legge til melk for en dag siden hvis jeg har tatt pillen,\r\n    altså hvis candrinkmilk er false.\r\n    Samme gjelder piller over\r\n    */\r\n    async addMilkLog(newTimestamp) {\r\n      this.milkFlashMessage = \"\";\r\n      this.pillFlashMessage = \"\";\r\n      if (!this.canDrinkMilk) {\r\n        this.milkFlashMessage =\r\n          \"Cannot add milk log since you have taken a pill\";\r\n        this.flashType = \"error\";\r\n        return;\r\n      }\r\n      let newTimestampUTC = moment(newTimestamp)\r\n        .utc()\r\n        .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n      await this.$axios.post(\"/milk_logs\", { timestamp: newTimestampUTC });\r\n      this.getMilkLogs();\r\n      this.checkStatus();\r\n      this.milkFlashMessage = \"Milk log added successfully\";\r\n      this.flashType = \"success\";\r\n    },\r\n\r\n    async deleteMilkLog(log) {\r\n      await this.$axios.delete(\"/milk_logs\", { data: { timestamp: log } });\r\n      this.getMilkLogs();\r\n      this.checkStatus();\r\n    },\r\n\r\n    async addPillLog(newTimestamp) {\r\n      this.milkFlashMessage = \"\";\r\n      this.pillFlashMessage = \"\";\r\n      if (!this.canTakePill) {\r\n        this.pillFlashMessage = \"Cannot add pill log less than 5 hours apart\";\r\n        this.flashType = \"error\";\r\n        return;\r\n      }\r\n      let newTimestampUTC = moment(newTimestamp)\r\n        .utc()\r\n        .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n      await this.$axios.post(\"/pill_logs\", { timestamp: newTimestampUTC });\r\n      this.getPillLogs();\r\n      this.checkStatus();\r\n      this.pillFlashMessage = \"Pill log added successfully\";\r\n      this.flashType = \"success\";\r\n    },\r\n\r\n    async deletePillLog(log) {\r\n      await this.$axios.delete(\"/pill_logs\", { data: { timestamp: log } });\r\n      this.getPillLogs();\r\n    },\r\n\r\n    async checkStatus() {\r\n      try {\r\n        let response = await this.$axios.get(\"/can_i\");\r\n        this.lastMilkTime = this.convertUtcToLocal(\r\n          response.data.last_milk_time_utc\r\n        );\r\n        this.canDrinkMilk = response.data.can_drink_milk;\r\n        this.canTakePill = response.data.can_take_pill;\r\n      } catch (error) {\r\n        console.error(\"Failed to check status:\", error);\r\n      }\r\n    },\r\n    convertUtcToLocal(utcTime) {\r\n      return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\r\n    },\r\n\r\n    startEditingMilkLog(log) {\r\n      this.editingMilkLog = log;\r\n      this.newMilkLogTime = log;\r\n    },\r\n    async saveEditingMilkLog(newTimestamp) {\r\n      this.milkFlashMessage = \"\";\r\n      this.pillFlashMessage = \"\";\r\n      if (this.isFutureDate(newTimestamp)) {\r\n        this.milkFlashMessage = \"Cannot set a date in the future\";\r\n        this.flashType = \"error\";\r\n        return;\r\n      }\r\n      let newTimestampUTC = moment(newTimestamp)\r\n        .utc()\r\n        .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n      await this.$axios.put(\"/milk_logs\", {\r\n        old_timestamp: this.editingMilkLog,\r\n        new_timestamp: newTimestampUTC,\r\n      });\r\n      this.getMilkLogs();\r\n      this.checkStatus();\r\n      this.editingMilkLog = null;\r\n      this.newMilkLogTime = null;\r\n    },\r\n    cancelEditingMilkLog() {\r\n      this.editingMilkLog = null;\r\n      this.newMilkLogTime = null;\r\n    },\r\n    startEditingPillLog(log) {\r\n      this.editingPillLog = log;\r\n      this.newPillLogTime = log; // Set the new time to the current time of the log\r\n    },\r\n    async saveEditingPillLog(newTimestamp) {\r\n      this.milkFlashMessage = \"\";\r\n      this.pillFlashMessage = \"\";\r\n      if (this.isFutureDate(newTimestamp)) {\r\n        this.pillFlashMessage = \"Cannot set a date in the future\";\r\n        this.flashType = \"error\";\r\n        return;\r\n      }\r\n      let newTimestampUTC = moment(newTimestamp)\r\n        .utc()\r\n        .format(\"YYYY-MM-DDTHH:mm:ss\");\r\n\r\n      await this.$axios.put(\"/pill_logs\", {\r\n        old_timestamp: this.editingPillLog,\r\n        new_timestamp: newTimestampUTC,\r\n      });\r\n      this.getPillLogs();\r\n      this.checkStatus();\r\n      this.editingPillLog = null;\r\n      this.newPillLogTime = null; // Reset the new time\r\n    },\r\n    cancelEditingPillLog() {\r\n      this.editingPillLog = null;\r\n      this.newPillLogTime = null; // Reset the new time\r\n    },\r\n    openMilkModal() {\r\n      this.showMilkModal = true;\r\n    },\r\n    closeMilkModal() {\r\n      this.showMilkModal = false;\r\n    },\r\n    openPillModal() {\r\n      this.showPillModal = true;\r\n    },\r\n    closePillModal() {\r\n      this.showPillModal = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.logo {\r\n  width: 150px;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.home {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.home p {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ea5736;\r\n  margin-bottom: 10px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.action-button,\r\n.logout-button {\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #ea5736;\r\n  border: none;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  line-height: 40px;\r\n}\r\n\r\n.logout-button {\r\n  background-color: #fff;\r\n  border: 1px solid #ea5736;\r\n  color: #ea5736;\r\n  margin-top: 10px;\r\n}\r\n\r\n.logs {\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.logs h2 {\r\n  text-align: center;\r\n  color: #ea5736;\r\n}\r\n\r\n.logs div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border: 1px solid #ea5736;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.logs button {\r\n  background-color: #ea5736;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
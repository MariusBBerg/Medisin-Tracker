{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport moment from \"moment\";\nexport default {\n  name: \"ProfileDash\",\n  data() {\n    return {\n      username: \"\",\n      lastMilkTime: \"\",\n      canDrinkMilk: false,\n      canTakePill: false\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return this.$store.state.isLoggedIn;\n    },\n    lastMilkTimeDisplay() {\n      return this.lastMilkTime ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\") : \"N/A\";\n    }\n  },\n  async created() {\n    if (this.isLoggedIn) {\n      try {\n        let response = await this.$axios.get(\"/\");\n        this.username = response.data.username;\n        this.checkStatus();\n      } catch (error) {\n        console.error(\"Failed to get user:\", error);\n      }\n    }\n  },\n  methods: {\n    async logOut() {\n      if (this.$store.state.isLoggedIn) {\n        try {\n          await this.$axios.post(\"/logout\");\n          this.$store.dispatch(\"logout\");\n          this.$router.push(\"/login\");\n        } catch (error) {\n          console.error(\"Failed to log out:\", error);\n        }\n      } else {\n        console.log(\"User is not logged in\");\n      }\n    },\n    async checkStatus() {\n      try {\n        let response = await this.$axios.get(\"/can_i\");\n        this.lastMilkTime = this.convertUtcToLocal(response.data.last_milk_time_utc);\n        this.canDrinkMilk = response.data.can_drink_milk;\n        this.canTakePill = response.data.can_take_pill;\n      } catch (error) {\n        console.error(\"Failed to check status:\", error);\n      }\n    },\n    convertUtcToLocal(utcTime) {\n      return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\n    }\n  }\n};","map":{"version":3,"names":["moment","name","data","username","lastMilkTime","canDrinkMilk","canTakePill","computed","isLoggedIn","$store","state","lastMilkTimeDisplay","local","format","created","response","$axios","get","checkStatus","error","console","methods","logOut","post","dispatch","$router","push","log","convertUtcToLocal","last_milk_time_utc","can_drink_milk","can_take_pill","utcTime","utc"],"sources":["C:\\Users\\mariu\\Documents\\Kode\\Prosjekter\\melk\\lymecyclin\\src\\components\\ProfileDash.vue"],"sourcesContent":["<template>\r\n    <div class=\"home\">\r\n      <img src=\"../assets/logo.png\" class=\"logo\" @click=\"$router.push('/')\"/>\r\n      <h1 v-if=\"isLoggedIn\">Hello {{ username }}</h1>\r\n      <div v-if=\"isLoggedIn\">\r\n        <div class=\"status\">\r\n          <p>Last milk time: {{ lastMilkTime }}</p>\r\n          <p>Can drink milk: {{ canDrinkMilk }}</p>\r\n          <p>Can take pill: {{ canTakePill }}</p>\r\n        </div>\r\n        <button class=\"logout-button\" @click=\"logOut\">Log Out</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import moment from \"moment\";\r\n  \r\n  export default {\r\n    name: \"ProfileDash\",\r\n  \r\n    data() {\r\n      return {\r\n        username: \"\",\r\n        lastMilkTime: \"\",\r\n        canDrinkMilk: false,\r\n        canTakePill: false,\r\n      };\r\n    },\r\n    computed: {\r\n      isLoggedIn() {\r\n        return this.$store.state.isLoggedIn;\r\n      },\r\n      lastMilkTimeDisplay() {\r\n        return this.lastMilkTime\r\n          ? moment(this.lastMilkTime).local().format(\"YYYY-MM-DD HH:mm:ss\")\r\n          : \"N/A\";\r\n      },\r\n    },\r\n  \r\n    async created() {\r\n      if (this.isLoggedIn) {\r\n        try {\r\n          let response = await this.$axios.get(\"/\");\r\n          this.username = response.data.username;\r\n          this.checkStatus();\r\n        } catch (error) {\r\n          console.error(\"Failed to get user:\", error);\r\n        }\r\n      }\r\n    },\r\n  \r\n    methods: {\r\n      async logOut() {\r\n        if (this.$store.state.isLoggedIn) {\r\n          try {\r\n            await this.$axios.post(\"/logout\");\r\n            this.$store.dispatch(\"logout\");\r\n            this.$router.push(\"/login\");\r\n          } catch (error) {\r\n            console.error(\"Failed to log out:\", error);\r\n          }\r\n        } else {\r\n          console.log(\"User is not logged in\");\r\n        }\r\n      },\r\n  \r\n      async checkStatus() {\r\n        try {\r\n          let response = await this.$axios.get(\"/can_i\");\r\n          this.lastMilkTime = this.convertUtcToLocal(response.data.last_milk_time_utc);\r\n          this.canDrinkMilk = response.data.can_drink_milk;\r\n          this.canTakePill = response.data.can_take_pill;\r\n        } catch (error) {\r\n          console.error(\"Failed to check status:\", error);\r\n        }\r\n      },\r\n      convertUtcToLocal(utcTime) {\r\n        return moment.utc(utcTime).local().format(\"YYYY-MM-DD HH:mm:ss\");\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .logo {\r\n    width: 100px;\r\n    cursor: pointer;\r\n  }\r\n  .home {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .home p {\r\n    width: 300px;\r\n    padding: 10px;\r\n    border: 1px solid #ea5736;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .action-button {\r\n    width: 300px;\r\n    height: 40px;\r\n    background-color: #ea5736;\r\n    border: 1px #ea5736;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .logout-button {\r\n    width: 300px;\r\n    height: 40px;\r\n    background-color: #fff;\r\n    border: 1px #ea5736;\r\n    color: #ea5736;\r\n    cursor: pointer;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .actions {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .status {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .status p {\r\n    width: 300px;\r\n    padding: 10px;\r\n    border: 1px solid #ea5736;\r\n    margin-bottom: 10px;\r\n    text-align: center;\r\n  }\r\n  </style>\r\n    "],"mappings":";AAgBE,OAAOA,MAAK,MAAO,QAAQ;AAE3B,eAAe;EACbC,IAAI,EAAE,aAAa;EAEnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,KAAK;MACnBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,UAAU;IACrC,CAAC;IACDG,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACP,YAAW,GACnBJ,MAAM,CAAC,IAAI,CAACI,YAAY,CAAC,CAACQ,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,qBAAqB,IAC9D,KAAK;IACX;EACF,CAAC;EAED,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,IAAI,CAACN,UAAU,EAAE;MACnB,IAAI;QACF,IAAIO,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,GAAG,CAAC;QACzC,IAAI,CAACd,QAAO,GAAIY,QAAQ,CAACb,IAAI,CAACC,QAAQ;QACtC,IAAI,CAACe,WAAW,CAAC,CAAC;MACpB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;EACF,CAAC;EAEDE,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI,IAAI,CAACb,MAAM,CAACC,KAAK,CAACF,UAAU,EAAE;QAChC,IAAI;UACF,MAAM,IAAI,CAACQ,MAAM,CAACO,IAAI,CAAC,SAAS,CAAC;UACjC,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,QAAQ,CAAC;UAC9B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC7B,EAAE,OAAOP,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC5C;MACF,OAAO;QACLC,OAAO,CAACO,GAAG,CAAC,uBAAuB,CAAC;MACtC;IACF,CAAC;IAED,MAAMT,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAIH,QAAO,GAAI,MAAM,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAACb,YAAW,GAAI,IAAI,CAACwB,iBAAiB,CAACb,QAAQ,CAACb,IAAI,CAAC2B,kBAAkB,CAAC;QAC5E,IAAI,CAACxB,YAAW,GAAIU,QAAQ,CAACb,IAAI,CAAC4B,cAAc;QAChD,IAAI,CAACxB,WAAU,GAAIS,QAAQ,CAACb,IAAI,CAAC6B,aAAa;MAChD,EAAE,OAAOZ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDS,iBAAiBA,CAACI,OAAO,EAAE;MACzB,OAAOhC,MAAM,CAACiC,GAAG,CAACD,OAAO,CAAC,CAACpB,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,qBAAqB,CAAC;IAClE;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}